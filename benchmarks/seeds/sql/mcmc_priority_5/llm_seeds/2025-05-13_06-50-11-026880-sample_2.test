set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix synctest

set ::timeout 60000  cmd  {}
proc cmd {} {
  set cmd {}
  for {set i 1} {$i le 200000} {incr i} {
    append cmd "SELECT 33 FROM t$i WHERE i like '3%'
  }
  return $cmd;
}

try_file tname [db name] {
  proc run_tests {} {
  db eval {
    CREATE TABLE t1(i integer PRIMARY KEY,a text DEFAULT 'hello');
    CREATE INDEX i1 ON t1(a);
  }
  do_test run-1.1 {
    execsql {
      SELECT * FROM t1
    }
  } {{1 hello} {2 hello} {3 hello} {4 hello} {5 hello}}
  do_test run-1.2 {
    execsql {
      INSERT INTO t1 VALUES
        (6,'world'),
        (7,'sqlite'),
        (8,'in'),
        (9,'the'),
        (10,'database')
    }
  } {}
  do_test run-1.3 {
    execsql {
      SELECT * FROM t1 ORDER BY a
    }
  } {{6 world} {7 sqlite} {8 in} {9 the} {1 hello} {5 hello} {10 database} {2 hello} {4 hello} {3 hello}}

  proc run2_tests {} {
    db eval {
      CREATE TABLE t2(x int);
      INSERT INTO t2 VALUES(1),(2),(3);
    }
    do_test run2-1.1 {
      execsql {
        SELECT count(*) FROM t2
      }
    } {3}
    do_execsql_test run2-1.2 {
      BEGIN;
      INSERT INTO t2 VALUES(4);
      COMMIT;
      SELECT count(*) FROM t2;
    } {4}
    do_execsql_test run2-1.3 {
      DROP TABLE t2;
      SELECT * FROM t2;
    } {}
  }

  run2_tests
  do_test run-2.1 {
    proc cmd {} {
      set cmd {}
      for {set i 1} {$i<=200000} {incr i} {
        append cmd "SELECT 33 FROM t$i WHERE i like '3%'"
      }
      return $cmd;
    }
    set N [expr 200000]
    for {set i 1} {$i<$N} {incr i} {
      do_test run-2.1.$i {
        execsql -echo [cmd]
      } {}
    }
  } {}
  do_test run-3.1 {
    proc syncproc {} {
      global syncargs
      lappend syncargs
      expr {[llength $syncargs] <= 2}
    }
    set syncargs {}
    syncproc
    set syncargs {}
  } {1}

  foreach test run2_tests run_tests {
    try catch $test {}
  }
  try catch run_tests {}
  ifcapable auto_vacuum {
    do_test run-4.1 {
      if {[file nativename $::{SQLITE_THREAD_LOCAL_STORAGE_URI_0}] == {file nativename $::{SQLITE_THREAD_LOCAL_STORAGE_URI}}} {
        execsql {
          PRAGMA auto_vacuum = 0;
          BEGIN;
          CREATE TABLE abc(x);
          INSERT INTO abc VALUES
            ('abc'),
            ('def'),
            ('ghi');
          COMMIT;
          VACUUM;
          PRAGMA page_size = 8192;
          PRAGMA page_count = 2;
          PRAGMA auto_vacuum = 1;
          COMMIT;
          PRAGMA page_count = 14;
        }
      }
    } {}
    do_test run-4.2 {
      execsql {
        PRAGMA auto_vacuum = 1;
        SELECT name, rootpage FROM sqlite_master;
      }
    } {sqlite_master 1 9}
    do_test run-4.3 {
      execsql {
        PRAGMA page_count = 2;
        DELETE FROM abc WHERE x = 'abc';
        PRAGMA page_count;
      }
    } {2}
    do_test run-4.4 {
      execsql {
        PRAGMA page_count = 12;
        DELETE FROM abc WHERE x = 'abc';
        PRAGMA page_count;
      }
    } {12}
    do_test run-4.5 {
      execsql {
        PRAGMA page_count = 28;
        DELETE FROM abc WHERE x LIKE 'def%';
        PRAGMA page_count;
      }
    } {28}
  }
  do_test run-5.1 {
    execsql {
      INSERT INTO t1 VALUES(11,'11');
    }
  } {}
  do_test run-5.2 {
    execsql {
      SELECT * FROM t