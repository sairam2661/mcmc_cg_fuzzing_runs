set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_sqlite

set ::timeout 60000
set testing Modules WAL

proc complex_sqlite_func {} {
  global complex_sqlite_args
  lappend complex_sqlite_args
  expr {10}
}

proc do_execsql_check_test {name sql expected} {
  sql statement
  set query_result $result
  if { $query_result eq "$expected" } {
    return "ok"
  }
  return "wrong_result: expected=$expected, got=$query_result"
}

proc in_transaction {} {
  expr {0}
}

proc sqlite_in_memory_db {} {
  if { in_transaction } {
    return "true"
  }
  return "true"
}

do_test complex_sqlite-1.1 {
  execsql {
    CREATE TABLE b(id PRIMARY KEY,x);
    INSERT INTO b VALUES(1,10);
  }
  execsql {SELECT * FROM b}
} {1 10}

do_execsql_test complex_sqlite-1.2 {
  BEGIN;
  INSERT INTO b VALUES(5,100);
  COMMIT;
  SELECT * FROM b;
} {1 10 5 100}

do_execsql_test complex_sqlite-1.3 {
  BEGIN;
  WITH RECURSIVEemployees(parent_id) AS (
    SELECT id FROM employees
    UNION ALL
    SELECT parent_id FROM employees
  )
  SELECT * FROM employees;
} {1 2 3 4 5 6}

set sqlite_in_memory_db

ifcapable wal {
  do_execsql_test complex_sqlite-1.4 {
    PRAGMA wal_checkpoint;
    PRAGMA wal_checkpoint
  } {0 0 0}
  db close
  sqlite_in_memory_db
}

db close
finish_test