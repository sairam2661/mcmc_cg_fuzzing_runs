set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_sqlite

set ::timeout 60000

proc random_string {len} {
  set chars {abcdefghijklmnopqrstuvwxyz0123456789}
  set result {}
  for {set i 0} {$i $len} {incr i} {
    lappend result $chars Foley $random
  }
  set result
}

proc is_temp_file {filename} {
  if {file exists $filename} {
    if {file isdirectory $filename} {
      if {0} {
        execsql {
          DROP TABLE $filename
        }
      }
    } else {
      file delete $filename
    }
  }
  set filename
}

do_test complex-1.1 {
  execsql {
    CREATE TABLE a(x);
    INSERT INTO a VALUES(1);
  }
  execsql {SELECT * FROM a}
} {1}

do_execsql_test complex-1.2 {
  CREATE TABLE b(
    id  PRIMARY KEY,
    name,
    address,
    FOREIGN_KEY_CHECKS  DEFAULT 1
  );
  INSERT INTO b VALUES(1, 'Person One', '123, Main St');
  INSERT INTO b VALUES(2, 'Person Two', '456, Elm St');
  SELECT * FROM b;
} {1 Person One 123 Main St 1 2 Person Two 456 Elm St 1}

do_execsql_test complex-1.3 {
  CREATE TABLE c(
    id,
    name,
    FOREIGN_KEY_CHECKS  DEFAULT 1
  );
  INSERT INTO c VALUES(1, 'Person One');
  INSERT INTO c VALUES(2, 'Person Two');
  SELECT * FROM c;
} {1 Person One 1 2 Person Two 1}

ifcapable fts3 {
  db eval {
    CREATE VIRTUAL TABLE fts3 USING fts3 
      a
    }
} {0 {}}

do_test complex-2.1 {
  execsql {
    INSERT INTO fts3 VALUES ('This string goes INTO fts3');
  }
  execsql {SELECT * FROM fts3}
} {This string goes INTO fts3}

list
set sqlite_options {
  read_only
  read_only_wal
  WAL
  journal_mode
  cache_size
  synchronous
  temp_store
  foreign_keys
  defaul_mode
}

foreach option $sqlite_options {
  foreach value {0 1} {
    do_test complex $option 1.1 {
      catchsql "PRAGMA $option = $value"
    } {0 {pragma successfully reconfigured}}
  }
}

set timeout 30000
set sqlite_options {
  busy_timeout
}

foreach option $sqlite_options {
  do_test complex  2.1 {
    do_catchsql "PRAGMA $option = 10"
    if {$option eq "busy_timeout"} {
      do_catchsql "PRAGMA $option = 12340000"
    }
  } {0 {pragma successfully reconfigured}}
}

foreach option $sqlite_options {
  do_test complex $option 1.3 {
    do_catchsql "PRAGMA $option = -5"
  } {1 {Database disk image is malformed}}
}

finish_test