set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix test_case_database

set ::timeout 60000
set temp_store 1
set default_synchronous 2

do_test test_case_database-1.1 {
  execsql {
    CREATE TABLE table1(
      id  PRIMARY KEY,
      val
    );
  }
  sqlite_db_config WAL
  execsql {
    CREATE TABLE table2(
      id  PRIMARY KEY,
      key  UNIQUE
    );
  }
} {}

do_execsql_test test_case_database-1.2 {
  CREATE TABLE test_table(
    c1,
    c2
  );
  INSERT INTO test_table(c1, c2) VALUES('one', 123);
  INSERT INTO test_table(c1, c2) VALUES('two', 456);
  SELECT c1 FROM test_table;
} {one two}

do_execsql_test test_case_database-1.3 {
  CREATE INDEX idx_test_table_c2 ON test_table(c2);
  SELECT c2 FROM test_table WHERE c1 = 'one';
} {123}

do_catchsql_test test_case_database{error_1} {
  DROP TABLE IF EXISTS test_table
}
{1 {no such table test_table}}

set result ""
for {set i 0} {$i 10} {incr i} {
  execsql "INSERT INTO test_table(c1,c2) VALUES('abc_$i', $i)"
}
execsql {
  SELECT c1 FROM test_table ORDER BY c2
}
list

foreach i {10 9 8 7 6 5 4 3 2 1} {
  execsql {INSERT OR IGNORE INTO test_table VALUES abc_$i $i}
}

do_execsql_test test_case_database-2.0 {
  SELECT * FROM test_table
  WHERE c2  = 7
} {abc_7 7}

do_execsql_test test_case_database-2.1 {
  SELECT COUNT(*) FROM table1
} {}

do_execsql_test test_case_database-2.2 {
  SELECT * FROM table1
  WHERE val = 4
} {}

do_execsql_test test_case_database-2.3 {
  SELECT * FROM table2
  WHERE id = 1
} {}

proc test_proc {} {
  set i 0
  while {$i 3} {
      if {0} { lappend result "errror"}
    } else { 
      incr i
    }
  }
  lappend result {abc 123}
  return $result
  set varvalue 10
  set varvalue {value}
  return $varvalue
  set varvalue
  return $result 
   return $result
  set result
  return "err"
 
foreach {val} {1 2 3} {
  if {$val  2} {set result "test_result"}
} 
do_test test_case_database-2.4 {
  test_proc
} {err abc 123 test_result}

do_execsql_test test_case_database-3.10 {
  PRAGMA schema
} {main}

finish_test