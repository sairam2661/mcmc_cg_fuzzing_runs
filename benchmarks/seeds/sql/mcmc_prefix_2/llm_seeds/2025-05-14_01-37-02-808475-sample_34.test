set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_query

set ::timeout 60000

proc complex_proc {} {
  global complexargs
  set complexargs {}
  set complexargs1 {1 2 3}
  set complexargs {}}'

do_test complex-1.1 {
  execsql {
    CREATE TABLE b(y);
    INSERT INTO b VALUES(5),(6),(7);
  }
  execsql {SELECT count(*) FROM b}
} {3}

do_execsql_test complex-1.2 {
  BEGIN;
  INSERT INTO b VALUES(8);
  COMMIT;
  SELECT count(*) FROM b;
} {4}

ifcapable wal {
  do_execsql_test complex-1.3 {
    PRAGMA journal_mode=WAL;
  } {wal}
  set ::walactive 1
} else {
  set ::walactive 0
}

proc wal_status {} {
  if {$::walactive} {
    return { wal active}
  } else {
    return {wal disabled}
  }
}

do_test complex-1.4 {
  wal_status
} [wal_status]

do_execsql_test complex-1.5 {
  DROP TABLE b;
} {}

do_execsql_test complex-1.6 {
  CREATE TABLE temp.c AS SELECT * FROM b;
  PRAGMA incremental_vacuum
} {\[0, 0, 0\]}

do_test complex-1.7 {
  execsql {
    SELECT c.y FROM temp.c
  }
} {{} {} {} {}}

proc complex_query {} {
  set query {SELECT name FROM sqlite_master WHERE type='table'}
  set result [execsql $query]
  set reslist [lmap row $result {
    lindex $row 0
  }]
  return $reslist
}

do_test complex-1.8 {
  complex_query
} [complex_query]

do_test complex-1.9 {
  execsql {
    CREATE TABLE d(x);
    INSERT INTO d VALUES(9);
  }
  execsql {SELECT count(*) FROM d}
} {1}

finish_test
do_test complex-1.10 {
  execsql {
    UPDATE d SET x=10;
  }
  execsql {SELECT * FROM d}
} {10}

finish_test
do_test complex-1.11 {
  execsql {
    UPDATE d SET x=20 WHERE rowid=2;
  }
  execsql {SELECT * FROM d ORDER BY rowid}
} {10 {} 20}

finish_test
do_test complex-1.12 {
  execsql {
    UPDATE d SET x=30 LIMIT 9 OFFSET 2;
  }
  execsql {SELECT * FROM d ORDER BY rowid}
} {10 {} {} 30}

finish_test
do_test complex-1.13 {
  execsql {
    DROP TABLE d;
  }
  execsql {SELECT * FROM c WHERE x IN (SELECT y FROM temp.c)}
} {}

finish_test
do_test complex-1.14 {
  execsql {
    BEGIN;
    UPDATE c SET y=20 WHERE name IS NOT NULL;
    COMMIT;
  }
  execsql {SELECT * FROM c}
} {{} {} {} {}}

finish_test
do_test complex-1.15 {
  execsql {
    UPDATE temp.c
    SET y = (SELECT MIN(y) FROM c)
    WHERE y > 20
  }
  execsql {SELECT * FROM c}
} {{} {} {} {}}

finish_test
do_test complex-1.16 {
  execsql {
    UPDATE temp.c
    SET y = (SELECT 1 + COALESCE(y*2, 0)*3)
    WHERE y <= 10
  }
  execsql {SELECT * FROM c}
} {{} {30} {21} {42}}

finish_test
do_test complex-1.17 {
  execsql {
    SELECT name FROM sqlite_master WHERE type='table'
  }
} {c}

finish_test
do_test complex-1.18 {
  execsql {
    DROP TABLE c;
  }
  execsql {
    SELECT name FROM sqlite_master WHERE type='table'
  }
} {}

finish_test
do_test complex-1.19 {
  execsql {
    CREATE TABLE e (z INTEGER);
    COMMIT;
  }
  execsql {SELECT * FROM e}
} {}

finish_test
do_test complex-1.20 {
  execsql {
    UPDATE e
    SET z = (SELECT y FROM c)
  }
} {}

finish_test
do_test complex-1.21 {
  execsql {
    CREATE TABLE x (w, a, b INTEGER);
    INSERT INTO x VALUES ('a1', 'a2', 1);
    INSERT INTO x VALUES ('b1', 'b2', 2);
  }
  execsql {