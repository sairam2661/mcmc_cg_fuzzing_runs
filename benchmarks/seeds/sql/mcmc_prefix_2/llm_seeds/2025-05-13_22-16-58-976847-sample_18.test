set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix locking

set ::timeout 60000
proc check_locks {sql} {
  execsql {SELECT * FROM a WHERE rowid='2'} sql
  expr 1
}

proc execsql_with_timeout {sql timeout} {
  set sqlite_master {}
  set timeout_in_ms $timeout
  after $timeout_in_ms
  set result {}
  while 1 {
    set result $sqlite_master
    if {$result ne ""} {break}
    after $timeout_in_ms
  }
  catch {unset result}
  uplevel $sql
}

do_test locking-1.1 {
  execsql {
    PRAGMA journal_mode = 'wal'
    }
  execsql {SELECT journal_mode FROM sqlite_master}
  } {wal}

do_execsql_test locking-1.2 {
  CREATE TABLE a(x);
  INSERT INTO a VALUES('10');
  CREATE TABLE b(x);
  INSERT INTO b VALUES('1');
  CREATE TABLE c(x);
  INSERT INTO c VALUES('5');
  COMMIT;
  SELECT count(*) FROM a;
} {1}

do_execsql_test locking-1.3 {
  BEGIN;
  COMMIT;
  SELECT count(*) FROM c;
} {1}

set syncargs {}
proc sync_proc {} {
  global syncargs
  lappend syncargs
  if {$syncargs eq {}} {
    execsql {
      PRAGMA journal_mode = 'persist'
    }
  } else {
    execsql {
      PRAGMA journal_mode = 'delete'
    }
  }
}

do_test locking-1.4 {
  sync_proc
  execsql {SELECT json(* )FROM sqlite_master}
  } {}

execsql_with_timeout {
  CREATE TABLE d(x);
  INSERT INTO d VALUES(10);
} 5000

do_test locking-1.5 {
  execsql {SELECT x FROM d WHERE x = '10'}
  execsql {SELECT x FROM d WHERE x = '10'}
  check_locks "SELECT rowid FROM a"
  check_locks "SELECT rowid FROM a"
} {1}

finish_test