set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix query_planner

set ::timeout 60000

proc query_planner {} {
  global query_planner_selects
  set query_planner_selects ""
  append query_planner_selects "SELECT a FROM t1 JOIN t2 ON t1.a = t2.b WHERE c = 'hello'"
  append query_planner_selects "\n"
  append query_planner_selects "SELECT a FROM t1 JOIN t2 ON t2.j = (SELECT id FROM other WHERE id >= CASE WHEN id % 5 = 0 THEN id - 5 ELSE id + 5 END).id WHERE t2.id = (SELECT id FROM other WHERE id <= CASE WHEN id BETWEEN 6 AND 7 THEN 5 ELSE 10 END) LIMIT 1"
}

do_test query-1.0 {
  foreach {tid table sql} {
    1 t1 "CREATE TABLE t1(a text, b text, c text)"
    2 t2 "CREATE TABLE t2(b text, c text, j integer)"
    3 other "CREATE TABLE other(id integer)"
  } {execsql $sql}
} {}

set query_planner_selects ""
query_planner

do_execsql_test query-1.1 {
  BEGIN;
  INSERT INTO t1 VALUES('a', 'b', 'c');
  INSERT INTO t2 VALUES('b', 'hello', 12345);
  INSERT INTO other VALUES(5);
  INSERT INTO other VALUES(10);
  COMMIT;
  SELECT sql FROM sqlite_master WHERE name = 't1';
  SELECT sql FROM sqlite_master WHERE name = 't2';
  SELECT sql FROM sqlite_master WHERE name = 'other';
  SELECT * FROM t1;
  SELECT * FROM t2;
} {}

do_test query-1.2 {
  foreach select $query_planner_selects {
    expr {execsql $select} eq "1 {hello}" 
  }
} {1 1}

set p1 {0 1}
ifcapable explain_query_plan {
  set res1 {}
  set res2 {}
  lassign sql_text "e1 e2" {
    set res1 $e1
    set res2 $e2
  }
} {PRAGMA query_plan select $p1}

foreach {i res} {0 {0 e1} 1 {SELECT 1 FROM e2 WHERE rowid = 12345} 2 {1 {}} 3 {4 {}}} {
  do_test queryplan$i {expr {$res3 eq $res}} {}
} 

finish_test