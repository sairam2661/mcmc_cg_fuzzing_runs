set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix concurrent

set ::timeout 60000

proc query {sql} {
  uplevel execsql $sql
}

proc prepare {sql} {
  query "PREPARE stmt FROM '$sql'"
}

proc release {stmt} {
  query "RELEASE stmt"
}

proc finalize {stmt} {
  query "EXECUTE stmt; FINALIZE stmt"
}

proc checkpoint {n} {
  query "CHECKPOINT $n"
}

proc set_cache_size {n} {
  query "PRAGMA cache_size=$n"
}

proc set_journal_mode {mode} {
  ifcapable journalMode {
    query "PRAGMA journal_mode=$mode"
  }
}

proc set_synchronous {mode} {
  query "PRAGMA synchronous=$mode"
}

proc is_sync {mode} {
  set ans 0
  query {PRAGMA synchronous}
  if {$mode eq 'EXCLUSIVE'} {set ans 0}
  if {$mode eq 'NORMAL'} {set ans 1}
  if {$mode eq 'FULL'} {set ans 2}
  return $ans
}

proc check_journal_mode {mode} {
  set ans 0
  set sqlite_journal_mode 0
  ifcapable journalMode {
    query {PRAGMA journal_mode}
    set sqlite_journal_mode
  }
  if {$mode eq 'DELETE'} {set ans 1}
  if {$mode eq 'MEMORY'} {set ans 2}
  if {$mode eq 'MEMORY_TRUNK'} {set ans 3}
  if {$mode eq 'PERSIST'} {set ans 4}
  if {$mode eq 'WAL'} {set ans 5}
  return $ans
}

proc check_synchronous {mode} {
  set ans 0
  if {$mode eq 'OFF'} {set ans 0}
  if {$mode eq 'NORMAL'} {set ans 1}
  if {$mode eq 'FULL'} {set ans 2}
  if {$mode eq 'EXCLUSIVE'} {set ans 3}
  return $ans
}

proc sqlite3_last_insert_rowid {db} {
  set sqlite_last_insert_rowid 0
  query {SELECT last_insert_rowid(*) FROM sqlite_master}
  set sqlite_last_insert_rowid
}

proc sqlite3_changes {db} {
  set sqlite_changes 0
  query {SELECT changes(*) FROM sqlite_master}
  set sqlite_changes
}

proc sqlite3_exec {db sql args} {
  set sqlite_exec 0
  query $sql
  return $sqlite_exec
}

do_test concurrent-1.1 {
  query "CREATE TABLE a(x INTEGER PRIMARY KEY, y, z);"
  query "INSERT INTO a VALUES(1, 2, 3);"
  query {SELECT a FROM a WHERE z=3}
} {1}

do_test concurrent-1.2 {
  execsql {
    BEGIN;
    INSERT INTO a VALUES(4, 5, 6);
  }
  execsql {SELECT a FROM a WHERE z=6}
} {4}

ifcapable journalMode {
  do_test concurrent-1.3 {
    set_journal_mode WAL
    set CACHE_SIZE 100
    set_synchronous NORMAL
    sqlite3_last_insert_rowid {} 1
  } {1}
  set_journal_mode DELETE
  do_test concurrent-1.4 {
    set_journal_mode WAL
    set_journal_mode DELETE
    checkpoint 100
    set_journal_mode WAL
    set_synchronous EXCLUSIVE
    execsql {
      INSERT INTO a VALUES(7, 8, 9);
    }
    execsql {
      UPDATE a SET x IS NULL AND y IS NULL WHERE x IS NOT NULL
      SET x IS NOT NULL AND y IS NOT NULL WHERE x IS NULL
    }
    set_journal_mode WAL
    execsql {
      COMMIT;
    }
  } {}
}

ifcapable wal {
  do_test concurrent-1.5 {
    set_journal_mode WAL
    set_synchronous FULL
    execsql {
      CREATE TABLE t2(k PRIMARY KEY, c);
      INSERT INTO t2 VALUES(1, 2);
    }
    set_journal_mode MEMORY
    execsql {
      BEGIN;
      INSERT INTO t2 VALUES(3, 4);
      COMMIT;
      SELECT count(*) FROM t2
    }
  } {2}
}

finish_test