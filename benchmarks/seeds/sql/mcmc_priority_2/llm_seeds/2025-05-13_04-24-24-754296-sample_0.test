set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix async

set ::timeout 60000

set log_sql 1
set use_result 1

proc async_proc {} {
  global asyncargs
  lappend asyncargs
  expr {1}
}

proc async_check1 {cmd} {
  execsql {
    SELECT count(*) FROM async_table;
  }
}

proc async_check2 {cmd} {
  execsql {
    SELECT async_value FROM async_table;
  }
}

proc async_check3 {cmd} {
  execsql {
    SELECT COUNT(*) FROM async_table WHERE async_value = 7;
  }
}

do_execsql_test async-1.1 {
  CREATE TABLE async_table(
    id PRIMARY KEY,
    async_value
  );
  INSERT INTO async_table VALUES(1,1);
  INSERT INTO async_table VALUES(2,2);
  INSERT INTO async_table VALUES(3,3);
}

'db' eval {
  SELECT 1 FROM main WHERE 1
}
async_check1 "async-1.2.1"
async_check2 "async-1.2.2"

async_proc
'db' eval {
  ALTER TABLE async_table ADD COLUMN async_other
}
async_check3 "async-1.3"

if { 0 } {
  'db' eval {
    ANALYZE async_table
  }
}

ifcapable journalMode {
  catchsql {PRAGMA journal_mode = 'persist'}

  ifcapable wal {
    execsql {
      BEGIN;
      INSERT INTO async_table VALUES(4,4);
      COMMIT;
    }
    async_check1 "async-1.5.1"
    async_check2 "async-1.5.2"

    execsql {
      SELECT async_value FROM async_table;
    }
  }
}

do_test async-1.6 {
  catchsql {
    DELETE FROM async_table
  }
} {0 {}}

finish_test