set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_sqlite

set ::timeout 60000

proc setup_db {} {
  execsql {
    CREATE TABLE users(id PRIMARY KEY, name);
    CREATE TABLE posts(post_id PRIMARY KEY, user_id, title);
  }
}

proc insert_users {} {
  execsql {
    INSERT INTO users VALUES(1, 'John Doe');
    INSERT INTO users VALUES(2, 'Jane Doe');
  }
}

proc insert_posts {} {
  execsql {
    INSERT INTO posts VALUES(1, 1, 'My first post');
    INSERT INTO posts VALUES(2, 1, 'My second post');
    INSERT INTO posts VALUES(3, 2, 'My first post');
  }
}

do_test complex-1.1 {
  setup_db
  execsql {SELECT name FROM sqlite_master}
} {users posts}

do_execsql_test complex-1.2 {
  SELECT users_name FROM users
} {John Doe Jane Doe}

do_execsql_test complex-1.3 {
  SELECT title FROM posts WHERE post_id = 1
} {My first post}

do_execsql_test complex-1.4 {
  SELECT users_name FROM users
  WHERE id = 1;
} {John Doe}

do_execsql_test complex-1.5 {
  SELECT p_title FROM posts
} {My first post My second post My first post}

do_test complex-1.6 {
  insert_users
  execsql {SELECT * FROM users}
} {1 John Doe 2 Jane Doe}

do_test complex-1.7 {
  setup_db
  insert_posts
  execsql {SELECT * FROM posts}
} {1 1 My first post 2 1 My second post 3 2 My first post}

ifcapable {read_write} {
  set dbhandle open_db users
  execsql "DROP TABLE IF EXISTS other_table" $dbhandle
  execsql "CREATE TABLE other_table(other_id PRIMARY KEY)" $dbhandle
  execsql "INSERT INTO other_table VALUES(1)" $dbhandle
  finish_transaction $dbhandle
} else {
  do_test complex1.8 {expr 1} {1}
}

finish_test