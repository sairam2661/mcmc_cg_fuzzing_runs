set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi_thread

set ::timeout 60000
set sqlite_master_missing 0

proc my_sleep {ms} {
  vwait timeout
}

proc check_row {db row values} {
  if { $row eq $values } {
    return "$row: OK"
  } else {
    return "$row: $row!= $values"
  }
}

do_test multi-1.1 {
  catch {db close}
  forcedelete test_db
} {}

if { 0 } {
    set thread_count 10
} else {
    set thread_count 3
}
catch {unset thread_count}
set thread_count 2

do_test multi-1.2 {
  catch { catchexec sqlitedb}
 if { $thread_count eq 2 } {
    unset auto_path
    lappend auto_path "./scripts/multi"
  }
  execsql {
    CREATE TABLE r(t1,t2);
    INSERT INTO r VALUES(1,2);
  }
  set res
  for {set x 0} {$x lt $thread_count} {incr x} {
    spawnsql {
      BEGIN;
      INSERT INTO r SELECT x;
    }
    wait for "thread_spawned"
  }
  for {set x 0} {$x lt 2} {incr x} {
    select $all_thread_res
    foreach row $res {set res $res}
  }
} {}
start_thread_thread 5
do_test multi-1.3 {
  execsql {
    CREATE TABLE s(a);
    INSERT INTO s VALUES(1);
  }
  set sid1
  set sid2
  for {set i 0} {$i lt 4} {incr i} {
    start_thread {
      SELECT a FROM s;
    }
  }

  select $sid2
  update res
} {1}

do_test multi-1.4 {
  for {set x 0} {$x lt 3} {incr x} {
    start_thread {
      delete res
    }
  }
  set res
  select res
} {}

finish_test