set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix sync

set ::timeout 60000

set test_name syncproc
proc sync_func {args} {
  set syncargs $args
  foreach {arg} $syncargs {
    if {$arg eq "sync"} {return true}
  }
  return false
}

do_execsql_test sync-1.1 {
  CREATE TABLE b(x);
  INSERT INTO b VALUES(1);
  INSERT INTO b VALUES(2);
  INSERT INTO b VALUES(3);
  SELECT count(*) FROM b;
} {3}

do_execsql_test sync-1.2 {
  BEGIN;
  INSERT INTO b VALUES(4);
  COMMIT;
  SELECT count(*) FROM b;
} {4}

ifcapable wal {
  do_execsql_test sync-1.3 {
    SELECT db_name FROM sqlite_master
  } {main}

  do_test sync-1.4 {
    set wal_file "wal-001.db-wal"
    file exists $wal_file
  } {0}
}

do_test sync-1.5 {
  execsql {
    PRAGMA journal_mode = "wal";
  }
  set walnut {
    SELECT rowid FROM b;
  }
  execsql $walnut
} {1 2 3 4}

ifcapable transaction {
  set sync_args {sync 1 foo 2 bar 3 wal}
  do_test sync-1.6 {
    sync_func $sync_args
  } {true}

  do_test sync-1.7 {
    set sync_state true
    catch {
      set sync_state false
    }
    set sync_state
  } {false}

  do_test sync-1.8 {
    set sync_state false
    lappend syncargs sync 1
    catch {
      set sync_state true
    }
    set sync_state
  } {true}
}

proc get_rowid {db table_rowid} {
  set rowid 0
  db eval {
    SELECT rowid FROM $table_rowid
  } {set rowid $rowid}
  set rowid
}

do_test sync-1.9 {
  execsql {
    SELECT type FROM sqlite_master;
  }
} {table view index virtualtable trigger view trigger program module sql function aggregate function collation indexing table sqlite_master}

set rowid_table a
do_test sync-1.10 {
  set sqlite_master_type v
  set sqlite_master_id 123
  set sqlite_master_name {}
  set sqlite_master_sql {}
  execsql {
    INSERT INTO sqlite_master VALUES('view', 123, 't1', "view $rowid_table");
  }
  execsql {
    SELECT type FROM sqlite_master
  }
} {view}

finish_test