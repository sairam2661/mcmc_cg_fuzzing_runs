set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_sqlite_test

set ::timeout 60000
forcedelete testdb
testvfs vfs_slurp
vfs_slurp filter testdb testvfs
file delete testdb
sqlite3 db testdb
do_execsql_test complex-1.1 {
  PRAGMA journal_mode = 'wal';
  PRAGMA synchronous = 0;
  PRAGMA temp_store = 2;
  PRAGMA shrink_memory = 10;
  BEGIN;
  CREATE TABLE a(x);
  INSERT INTO a VALUES(1);
  INSERT INTO a VALUES(2);
  INSERT INTO a VALUES(3);
  CREATE INDEX i_a ON a(x);
}
{wal 0 2}

db close
forcedelete testdb
sqlite3 db testdb
file delete testdb

do_test complex-1.2 {
  set fp 24k
  execsql {
    CREATE TABLE b(x);
    BEGIN;
    INSERT INTO b VALUES(4);
    INSERT INTO b VALUES(5);
    COMMIT;
    SELECT count(*) FROM b;
  }
  execsql {ANALYZE b}
  db cache flush
  execsql {
    DELETE FROM b WHERE x BETWEEN 3 AND 4
  }
  execsql {SELECT * FROM b}
} {4 {} 5 {}}

forcedelete testdb

testvfs vfs_slurp

set zVfsName "vfs_name"

proc sqlite3_open_v2 {fname flags mode} {
  upvar vfs_list LIST
  foreach {vfsname} $LIST {
    if { $vfsname eq $zVfsName } {
      return "vfs_slurp filter $fname $vfsname"
    }
  }
  return "vfs_slurp $fname $vfsname"
}

sqlite3 db testdb
vfs_slurp filter testdb $zVfsName
execsql {
  PRAGMA journal_mode = 'wal'
  			   		         
  }
execsql { SELECT name FROM sqlite_master WHERE type='table'}
{a b}
execsql {SELECT * FROM a}

do_test complex-1.3 {
  set fp 24k
  execsql {
    CREATE TABLE c(x);
    BEGIN;
    INSERT INTO c VALUES(4);
    INSERT INTO c VALUES(5);
    COMMIT;
    SELECT count(*) FROM c;
  }
} {2}

forcedelete testdb

testvfs vfs_slurp

vfs_slurp filter testdb {vfs_name}
execsql {
  CREATE TABLE d(x);
  INSERT INTO d VALUES('a');
  INSERT INTO d VALUES('bb');
  SELECT * FROM d;
}
{a bb}

sqlite3 db close
finish_test