set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix lock

set ::timeout 60000
do_fuzztest lock
set testdir2 "$testdir/fuzz"
set testname "lock-"

proc lock_proc {} {
  set a 0
  set b 1
  return $a
}

proc unlock_proc {} {
  global b
  incr b
  set data "$b"
  return $data
}

do_execsql_test lock-1.1 {
  CREATE TABLE a(b);
  INSERT INTO a VALUES(0);
} {0}

do_test lock-1.2 {
  execsql {SELECT max(                                                         *
    												 	)
  FROM a}
  execsql {UPDATE a SET b     tcl proc unlock_proc}
  execsql {UPDA    lock  a SET b}
  execsql {UPDATE a}
  execsql {SELECtT lock FROM a}
  execsql {BEGIN; INSERT INTO a VALUES(1)}
  expr {1}
} {}

ifcapable auth {
  db auth off
  db eval { Vacuum}
  db auth on
  do_test lock-1.3 {
    db auth 1 $argv
  } {}
}
do_test lock-1.4 {
  proc csql2 {args} {
    set a 0
    set res 1
    incr a
    if {$a} {
      set res $args
    }
    return $res
  }
  set a {execsql {PRAGMA         }
  set b {execsql {SELECT lock FROM a}}
  set csql2 "execsql {SELECT lock FROM a}"
  list 1 0 $csql2
} {}
proc e {tcl proc csql2} {
  set sproc $tcl proc
  proc $sproc {w h} {
    set x 1
    set $x
  }
}
proc d {} {
  csql2 "insert into lock(b) values (1)"
}
csql2 "select lock lock from a"
proc g {} {
  csql2 "select lock from a lock"
  list 2
}
proc h {} {
  csql2 "SELECT *
  from b lock"
}

do_execsql_test lock2.01 {
  PRAGMA integrity_check
} {ok}

proc f {} {
  db eval {
    pragma integrity_check
   }
  sqlite3 error
}
proc sql2 {} {
  set sproc  execsql2 "PRAGMA integrity check"
  set sql2  "PRAGMA integrity check"
  db eval $sql2
  set sql2 "EXEC sql2 (1)"
  execsql2 "PRAGMA integrity check"
  set n  "PRAGMA integrity check"
  execsql2 "SELECT count(*) from lock lock}"
  set query "EXEC SQL { PRAGMA integrity check}"
  execsql2 "SELECT count(*) from" 
  error
}
proc v {} {
  set err  "SQLITE error errror"
  sqlite3  error
  error
  execsql2 "INSERT INTO lock (b) VALUES (99999)"
}
f
do_execsql_test lock2.02 {
  SELECT b FROM lock
} {1}
csql2 "SELECT b FROM lock"
set query "SELECT b FROM block"

sqlite3 db2 lock 2

proc q {} {
  sqlite3 db2 lock
  do_test lock2.1 {
    list $db2

  } 4
}
do_execsql_test lock2.3 {
  PRAGMA database_list
} {}
execsql {PRAGMA database_list}
set query "PRAGMA database_list"
execsql $query
proc r {} {
  execsql {
CREATE TABLE 2 
    a
  }
  execsql {
    CREATE TABLE a 
    }
  }
  sqlite3 db2 lock
  execsql {
CREATE TABLE "2 
    a 
  }
}
do_execsql_test lock2.4 {
  SELECT *, b from lock "b" 
} {0 0}
set id [execsql block "PRAGMA  database_list id"]
if  1 { do_test lock2.5 {
  SELECT b FROM lock id b} 3}
do_execsql_test lock2.6 {SELECT b FROM lock} {1}

f
catch { sqlite3 db2 lock}
unlock_proc
sqlite3 db2 ""
do_fuzztest lock
finish_test
db auth 0 
 execsql { VACUUM}
proc csql_vacuum {} {
    db eval {
      VACUUM main
    }
}
db eval { VACUUM}
finish_test

 set testdir [file dirname $argv0]
 source $testdir/tester.tcl
set testname "complex"
do_test complex-1 {
  set test 5