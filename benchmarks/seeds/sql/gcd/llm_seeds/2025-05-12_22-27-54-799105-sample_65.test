set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix transaction

set ::timeout 60000

proc transaction_proc {} {
  global transactionargs
  lappend transactionargs
  expr {$transactionargs}
}

proc transaction_check {} {
  global transactionargs
  set result 1
  foreach row $transactionargs {
    lassign $row op data result expect
    if {$result} {
      if {$op eq "INSERT"} {
        if {sqlite3_exec db {SELECT $data FROM t1} eq $data} {continue}
      }
      if {$op eq "UPDATE"} {
        if {sqlite3_exec db {SELECT $data FROM t1} eq $data} {continue}
      }
    } else {
      if {$op eq "INSERT"} {
        if {catch {sqlite3_exec db {SELECT $data FROM t1}}} {continue}
      }
      if {$op eq "UPDATE"} {
        if {catch {sqlite3_exec db {SELECT $data FROM t1}}} {continue}
      }
    }
  }
  return $result
}

do_test transaction-1.1 {
  execsql {
    CREATE TABLE t1(a); 
    BEGIN;
  }
  execsql {
    INSERT INTO t1 VALUES('Hello, world!');
  }
  append transactionargs {
    {"INSERT" "Hello, world!" 1 1}
  }
} {}

do_test transaction-1.2 {
  execsql {
    UPDATE t1 SET a ''
  }
  append transactionargs {
    {"UPDATE" "" 0 0}
  }
} {}

ifcapable rtree {
  do_test transaction-1.3 {
    execsql {
      CREATE VIRTUAL TABLE t2 USING rtree
        minx miny maxx maxy
    }
    execsql {
      INSERT INTO t2 VALUES
        (1, 1, 3, 3, 0.1, 0.2, 0.3, 0.4)
    }
  }
  {INTEGER IS NOT NULL}

  do_test transaction-1.4 {
    execsql {
      UPDATE t2 SET
        minx 0.01 AND
        maxx 0.02 AND
        miny 0.02 AND
        maxy 0.03
    }
  } {}
} 

ifcapable fts3 {
  do_test transaction-1.5 {
    execsql {
      CREATE VIRTUAL TABLE t3 USING fts3 DocID title content
    }
    execsql {
      INSERT INTO t3 VALUES(
        1,
        'Title Test',
        'This is a doc text'
      )
    }
  }
  {docid title content}

  do_test transaction-1.6 {
    execsql {
      UPDATE t3 SET content ''
    }
  } {}
} 

finish_test