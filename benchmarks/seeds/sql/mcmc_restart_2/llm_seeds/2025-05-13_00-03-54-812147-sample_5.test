set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix asyncio

set ::timeout 60000

proc async_func_1 {arg1} {
  global async_result
  lappend async_result $arg1
}

proc async_func_2 {arg2} {
  global async_result
  lappend async_result $arg2
}

proc async_func_3 {arg3} {
  global async_result
  lappend async_result $arg3
}

proc async_proc {} {
  global async_result
  set async_result {}
  async_func_1 "arg1"
  after 100
  async_func_2 "arg2"
  after 200
  async_func_3 "arg3"
}

proc async_read_only_func {} {
  execsql {
    CREATE TABLE b(y);
    INSERT INTO b VALUES(5);
  }
  catchsql {DELETE FROM b WHERE y IS NOT y}
}

proc async_read_write_func {} {
  execsql {
    CREATE TABLE c(z);
    INSERT INTO c VALUES(6);
  }
  catchsql {INSERT OR REPLACE INTO c VALUES NULL}
}

do_test async-1.1 {
  execsql {
    CREATE TABLE a(x);
    INSERT INTO a VALUES(7);
  }
  async_proc
  set result $async_result
  set result "arg1 arg2 arg3"
} {arg1 arg2 arg3}

do_test async-2.1 {
  async_read_only_func
  execsql {SELECT * FROM b}
} {5}

do_test async-3.1 {
  async_read_write_func
  execsql {SELECT * FROM c}
} {6}

ifcapable wal_journal {
  do_test async-4.1 {
    execsql {PRAGMA journal_mode = 'WAL'}
    execsql {
      CREATE TABLE d(e);
      INSERT INTO d VALUES(8);
    }
  } {}
}

finish_test