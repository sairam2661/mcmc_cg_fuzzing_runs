set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix db_constraints

set ::timeout 60000

execsql {
  PRAGMA foreign_keys=1;
}

proc db_constraints_proc {} {
  global db_constraints_sql
  db_constraints_sql "CREATE TABLE t1 (a INTEGER PRIMARY KEY, b INTEGER)"
  db_constraints_sql "CREATE TABLE t2 (c INTEGER PRIMARY KEY, d INTEGER)"
  db_constraints_sql "CREATE TABLE t3 (a INTEGER, PRIMARY KEY (a), b INTEGER, FOREIGN KEY (b) REFERENCES t2(d) ON DELETE SET NULL)"
}
db_constraints_proc 

do_execsql_test db_constraints-1.1 {
  INSERT INTO t1 VALUES(1, 10);
  INSERT INTO t2 VALUES(10, 20);
  SELECT * FROM t1
} {1 10}

ifcapable triggerJurisdiction {
  do_execsql_test db_constraints-1.2 {
    INSERT INTO t3 VALUES(1, 30);
    SELECT * FROM t1;
  } {1 10}

  do_execsql_test db_constraints-1.3 {
    INSERT INTO t2 VALUES(30, 40);
    SELECT * FROM t1;
  } {1 10}

  do_execsql_test db_constraints-1.4 {
    INSERT INTO t3 VALUES(30, 40);
    SELECT * FROM t1
  } {1 10}

  do_catchsql_test db_constraints1.5 {
    CREATE TABLE t4 AS SELECT 1 AS a UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 
    CREATE INDEX idx_t4a ON t4
    ALTER TABLE t4 ADD COLUMN c INTEGER
    UPDATE t4 SET c INFER FROM t3 ON t4
  } {1 {foreign key mismatch "t4" table has no column named "a"}}

  do_execsql_test db_constraints-1.6 {
    INSERT INTO t3 VALUES(40, 50)
    							  }
  {1 {}}
} 

finish_test