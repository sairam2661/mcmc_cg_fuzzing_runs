set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complexdb

set ::timeout 60000

proc complexdb_proc {} {
  global complexdbargs
  lappend complexdbargs
  expr {0}
}

do_test complexdb-1.1 {
  db close
  sqlite3 db testDb
  execsql {
    CREATE TABLE user(user_id PRIMARY KEY, name, age);
    CREATE TABLE order(order_id PRIMARY KEY, user_id, order_date, total);
  }
  execsql {SELECT count(*) FROM user}
} {0}

do_execsql_test complexdb-1.2 {
  INSERT INTO user VALUES(1, 'John Doe', 30);
  INSERT INTO user VALUES(2, 'Jane Doe', 25);
  INSERT INTO order VALUES(1, 1, '2022-01-01', 100.0);
  INSERT INTO order VALUES(2, 2, '2022-01-02', 200.0);
  SELECT count(*) FROM user;
} {2}

do_test complexdb-1.3 {
  execsql {
    UPDATE order SET total WHERE order_id BETWEEN 1 AND 2
    ORDER BY total DESC
  }
  set resultId
  execsql {
    SELECT SUM$total FROM order
    INTO resultId
    WHERE user_id IS NOT NULL
    AND order_date BETWEEN '2022-01-01' AND '2022-01-31'
  }
  expr {$resultId eq 300.0}
} {1}

do_execsql_test complexdb-1.4 {
  WITH RECURSIVEHierarchy(user_id) AS (
    SELECT 1 FROM DUAL
    UNION ALL
    SELECT order_id FROM order WHERE user_id = 1
  )
  SELECT count(*) FROM Hierarchy
} {2}

ifcapable journalMode {
  catchsql {PRAGMA journal_mode = 'TRUNCATE'}
} {0 0}

set db 0
set db2 2
db eval {ATTACH 'testDatabase2.db' AS db2}
do_test complexdb-1.5 {
  set db result
  db close
  file exists testDatabase2
} {true}

db2 eval {SELECT * FROM db2_databases}
db2 close
db detach 'testDatabase2.db'
finish_test