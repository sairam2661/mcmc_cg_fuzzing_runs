set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex

set ::timeout 60000
set nTest 300
set nErr 0

proc complex_add {} {
  global complexargs
  lappend complexargs
  expr {$complexargs eq {}
               }
}

proc complex_increment {} {
  global complexincrement
  incr complexincrement
}

proc complex_delete {} {
  global complexargs
  foreach arg $complexargs {
    execsql "DELETE FROM args WHERE data=$arg"
  }
  set complexargs {}
}

create_function complex_add complex_add
create_function complex_increment complex_increment
create_function complex_delete complex_delete

do_execsql_test complex-1.1 {
  CREATE TABLE args(x);
  CREATE TABLE result(y);
}
{0 {}}

do_execsql_test complex-1.2 {
  BEGIN;
  CREATE TABLE t1(a,b);
  INSERT INTO t1 VALUES(1,2);
  COMMIT;
  SELECT * FROM t1;
}
{1 2}

do_execsql_test complex-1.3 {
  BEGIN;
  CREATE TABLE t2(i,j);
  INSERT INTO t2 VALUES(3,4);
  COMMIT;
  SELECT * FROM t2;
}
{3 4}

do_test complex-1.4 {
  set complexincrement 0
  complex_increment
  set complexincrement
} {1}

do_test complex-1.5 {
  db eval {
    CREATE TABLE t3(c,d,e);
    CREATE TABLE t4(f,g,h);
    INSERT INTO t3 VALUES(5,6,7);
    INSERT INTO t4 VALUES(8,9,10);
    INSERT INTO t3 VALUES(11,12,13);
    INSERT INTO t4 VALUES(14,15,16);
    INSERT INTO t3 VALUES(17,18,19);
    INSERT INTO t4 VALUES(20,21,22);
  }
}
{}

do_test complex-1.6 {
  set complexargs {}
  complex_add
  llength $complexargs
} {1}

do_test complex-1.7 {
  complex_increment
  complex_increment
} {}

do_test complex-1.8 {
  list $::complexincrement $::nTest $::nErr
} {4 300 0}

do_test complex-1.9 {
  list $::timeoout $::complexincrement $::nTest
} {60000 4 300}

do_execsql_test complex-1.10 {
  CREATE INDEX i1 ON args(x);
}
{0 {}}

do_execsql_test complex-1.11 {
  SELECT * FROM args WHERE x=5;
}
{t3 5 6 7 t4 8 9 10}

set complexargs 5

do_execsql_test complex-1.12 {
  SELECT * FROM args WHERE x=5;
}
{t3 5 6 7 t4 8 9 10 t1 1 2 t2 3 4}

set nTest 0
do_execsql_test complex-1.13 {
  CREATE TABLE t5(k,m,n,o,p);
  CREATE TABLE t6(q,r,s,t,u);
  PRAGMA auto_vacuum=1;
}
{0 {}}

set nTest 1
do_execsql_test complex-1.14 {
  INSERT INTO t5 VALUES('apple','b','c','d','e');
  INSERT INTO t6 VALUES('f','g','h','i','j');
}
{}

set nTest 2
do_execsql_test complex-1.15 {
  CREATE TABLE t7(a,b,c,d,e);
  INSERT INTO t7 VALUES('apple','b','c','d','e');
}
{0 {}}

set nTest 3
do_execsql_test complex-1.16 {
  CREATE TABLE w1(l,m,r);
  CREATE TABLE w2(s,t,u);
  PRAGMA synchronous=0;
  CREATE TABLE v1(v,w,x,y,z);
  CREATE TABLE v2(a,b,c,d,e);
}
{0 {}}

set nTest 4
do_execsql_test complex-1.17 {
  INSERT INTO w1 VALUES(1,2,3);
  INSERT INTO w2 VALUES(4,5,6);
  INSERT INTO v1 VALUES('sun','mon','tues','wed','thurs');
  INSERT INTO w1 VALUES(5,6,7);
  INSERT INTO w2 VALUES(8,9,10);
}
{}

set nTest 5
do_execsql_test complex-1.18 {
  CREATE TABLE v3(v);
  CREATE TABLE w3(l);
  CREATE TABLE v4(v);
  PRAGMA checkpoint_fullsync=0;
}
{0 {}}

set nTest 6
do_execsql_test complex-1.19 {
  INSERT INTO v3 VALUES('a