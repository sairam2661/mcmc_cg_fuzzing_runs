set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix dbstats

set ::timeout 60000

proc dbstats_func {} {
  return "2.5"
}

proc dbstats2_func {} {
  return "foo"
}

proc dbstats3_func {} {
  return "bar"
}

do_test dbstats-1.1 {
  execsql {
    CREATE TABLE a(x);
    INSERT INTO a VALUES(1);
  }
  execsql {SELECT count(*) FROM a}
} {1}

do_execsql_test dbstats-1.2 {
  BEGIN;
  INSERT INTO a VALUES(2);
  COMMIT;
  SELECT count(*) FROM a;
} {2}

ifcapable journalMode {
  catchsql {
    PRAGMA journal_mode = 'DELETE';
    PRAGMA wal_checkpoint;
  }
} {0 {}}

do_test dbstats-1.3 {
  execsql {
    SELECT value FROM dbstatstable;
  }
} {dbstats_func dbstats2_func dbstats3_func}

do_catchsql_test dbstats2.4 {
  SELECT foo( * ) FROM a;
} {1 {no such function foo} {SQL logic error or missing database}}

set up2_tests {
  do_test dbstats3.5 {
    execsql {
      CREATE TABLE b(y);
      INSERT INTO b VALUES(3);
      SELECT count(*) FROM b;
    }
  } {1}
  foreach {test} {
    do_test dbstats4.6 {
      execsql {
        PRAGMA journal_mode;
      }
    } {}
    do_test dbstats5.7 {
      execsql {
        PRAGMA wal_checkpoint;
      }
    } {}
  } {
    uplevel $test
  }
}

finish_test

set up tests {
  do_test dbstats7.8 {
    execsql {
      PRAGMA journal_mode = 'wal'
      }
  } {}
  do_test dbstats8.9 {
    execsql {
      SELECT count(*) FROM a;
    }
  } {2}
  do_execsql_test dbstats9.10 {
    BEGIN;
    INSERT INTO a VALUES(3);
    COMMIT;
    SELECT count(*) FROM a;
  } {3}
  do_test dbstats10.11 {
    dbstats_func
  } {2.5}
}

finish_test