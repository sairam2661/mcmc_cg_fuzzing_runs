set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix testdb

set ::timeout 60000
db close

testvfs vfs1
vfs1 filter xOpen
proc xOpen {file mode} {
  return "file::$file" 0
}
vfs1 filter {}

do_execsql_test main-1.1 {
  CREATE TABLE a(x);
  INSERT INTO a VALUES(1);
  SELECT x FROM a;
} {1}

do_execsql_test main-1.2 {
  CREATE TABLE b(y);
  INSERT INTO b VALUES(2);
  SELECT y FROM b;
} {2}

do_test main-1.3 {
  execsql {
    CREATE INDEX on a 1
  }
  catchsql {
    INSERT INTO a VALUES(4);
  }
} {1 {database or disk full}}

do_execsql_test main-1.4 {
  PRAGMA journal_mode;
} {wal}

do_test main-1.5 {
  set v 1
  execsql {
    CREATE INDEX idx on b 1
  }
  set v
} {2}

do_test main-1.6 {
  execsql {
    INSERT INTO b SELECT 1
  }
  execsql {
    SELECT b FROM a
  }
} {}

do_test main-3.1 {
  set sql {
    CREATE TABLE ab(x,y);
    INSERT INTO ab VALUES(1,2);
    SELECT * FROM ab;
  }
  execsql $sql
  set result "1 2"
  set result
} {1 2}

do_execsql_test main-3.2 {
  CREATE TABLE ab(x,y);
  INSERT INTO ab VALUES(1);
  SELECT * FROM ab;
} {1 {}}

vfs1 filter xDelete
proc xDelete {file} {
  return SQLITE_OK
}
vfs1 filter {}

testvfs vvs2
vfs2 fileio

do_execsql_test test-3.1 {
  CREATE TABLE abc(x,y,z);
  INSERT INTO abc VALUES(1,2,3);
  SELECT * FROM abc;
} {1 2 3}

do_execsql_test test-3.2 {
  CREATE TABLE abc(x,y,z);
  INSERT INTO abc VALUES(1);
  SELECT * FROM abc;
} {1 {} {}}

vfs2 filter xDelete
proc xDelete {file} {
  return SQLITE_OK
}
vfs2 filter {}

do_test main-5.1 {
  set VFS vfs1
  execsql {
    INSERT INTO abc VALUES(4);
  }
} {}

do_test main-5.2 {
  set VFS vfs2
  execsql {
    INSERT INTO abc VALUES(4);
  }
} {}

finish_test