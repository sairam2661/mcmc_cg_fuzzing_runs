set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix unicode

set ::timeout 60000

proc unicode_upper {} {
  global unicodeargs
  lappend unicodeargs "upper"
}

proc unicode_lower {} {
  global unicodeargs
  lappend unicodeargs "lower"
}

proc unicode_equal {} {
  global unicodeargs
  lappend unicodeargs "equal"
}

do_test unicode-1.1 {
  execsql {
    CREATE TABLE test(a);
    INSERT INTO test VALUES('test ');
    INSERT INTO test VALUES('Test ');
  }
  set result ""
  foreach {a} {
    "test "
    "test\r"
    "test\n"
    "test\x00"
    "Test"
    "Test\r"
    "Test\n"
    "Test\x00"
    "TEST"
    "TEST\r"
    "TEST\n"
    "TEST\x00"
  } {
    set result $result"($a, "
    execsql "SELECT UPPER(:a) FROM test" a
    append result $a" )"
  }
  $result
} { }

do_execsql_test unicode-1.2 {
  BEGIN;
  INSERT INTO test VALUES('ä');
  COMMIT;
  SELECT a FROM test;
} {{} }
do_test unicode-1.3 {
  db close
  execsql {
    CREATE TABLE test(a);
    INSERT INTO test VALUES('ä');
    SELECT a FROM test;
  }
} '{{} }

do_test unicode-1.4 {
  execsql {
    CREATE TABLE test(a);
    INSERT INTO test VALUES(1);
    SELECT a FROM test;
  }
} {{1}}
do_execsql_test unicode-1.5 {
  BEGIN;
  UPDATE test SET a=a+1;
  COMMIT;
  SELECT a FROM test;
} {{2}}

do_execsql_test unicode-1.6 {
  BEGIN;
  INSERT INTO test VALUES('test');
  UPDATE test SET a=a;
  ROLLBACK;
  SELECT a FROM test;
} {{}

ifcapable vacuum {
  catchsql {VACUUM}
} {0 {}}

finish_test

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix locking

proc locking_lock {} {
  global lockingargs
  lappend lockingargs "lock"
}

proc locking_unlock {} {
  global lockingargs
  lappend lockingargs "unlock"
}

proc locking_locking {} {
  global lockingargs
  lappend lockingargs "locking"
}

do_test locking-1.1 {
  execsql {
    CREATE TABLE test(a);
    INSERT INTO test VALUES(1);
  }
  set result ""
  foreach {a} {
    1
    1.1
  } {
    set result $result"($a, "
    execsql "SELECT LOCKING(:a) FROM test" a
    append result $a" )"
  }
  $result
} { }
do_execsql_test locking-1.2 {
  BEGIN;
  INSERT INTO test VALUES(1);
  COMMIT;
  SELECT a FROM test;
} {{1}}
do_execsql_test locking-1.3 {
  BEGIN;
  UPDATE test SET a=a+1;
  COMMIT;
  SELECT a FROM test;
} {{2}}
do_test locking-1.4 {
  execsql {
    CREATE TABLE test(a);
    INSERT INTO test VALUES(NULL);
    SELECT a FROM test;
  }
} {{}}
do_execsql_test locking-1.5 {
  BEGIN;
  INSERT INTO test VALUES(NULL);
  COMMIT;
  SELECT a FROM test;
} {{}}
finish_test

set testdir [file dirname $argv0]
source $testdir/fts3tcl.tcl
set testprefix fts3

proc fts3_insert {} {
  global fts3args
  lappend fts3args "insert"
}

proc fts3_delete {} {
  global fts3args
  lappend fts3args "delete"
}

proc fts3_full {} {
  global fts3args
  lappend fts3args "full"
}

do_execsql_test fts3-1.1 {
  CREATE VIRTUAL TABLE test USING fts3(a, b);
  INSERT INTO test VALUES('one one one', 'two two two', 'three three');
  SELECT * FROM test;
} {{} {} {one one one} {two two two two two two} three three three}
do_test fts3-1.2 {
  execsql {
    DROP TABLE test;
    CREATE VIRTUAL TABLE test1 USING fts3(a, b);
    INSERT INTO test1 VALUES('one');
    SELECT * FROM test1;
  }
} {{{} {}}}
do_execsql_test fts3-1.3 {
  CREATE VIRTUAL TABLE test2 USING fts3(a, b);