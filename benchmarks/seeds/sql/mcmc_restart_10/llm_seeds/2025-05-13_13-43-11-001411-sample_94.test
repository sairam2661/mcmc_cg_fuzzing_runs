set testdir [file dirname $argv0]
source $testdir/fuzztester.tcl
set testprefix wal_sync

set ::timeout 60000
setup_test_directory wal_sync

proc wal_sync_func_a {} {
  execsql {CREATE TABLE a(x)}
  execsql {INSERT INTO a VALUES(1)}
}

proc wal_sync_func_b {} {
  execsql {INSERT INTO a VALUES(2)}
  execsql {PRAGMA wal_checkpoint}
}

do_test wal_sync-1.1 {
  execsql {
    CREATE TABLE b(y);
    INSERT INTO b VALUES(1);
    SELECT count(*) FROM b
  }
} {1}

do_test wal_sync-1.2 {
  wal_sync_func_a
  wal_sync_func_b
  execsql {
    SELECT * FROM b
  }
} {1}

do_execsql_test wal_sync-1.3 {
  BEGIN;
  INSERT INTO a VALUES(3);
  COMMIT;
  SELECT count(*) FROM a;
} {3}

do_catchsql_test wal_sync_2.0 {
  UPDATE a SET x '='
} {1 {cannot use '=' with UPDATE in a column binding}}

proc wal_sync_func_c {} {
  execsql {CREATE TABLE c(z)}
  execsql {CREATE INDEX c_i1 ON c(z)}
  execsql {INSERT INTO c VALUES(1)}
}

proc wal_sync_func_d {} {
  execsql {DROP INDEX c_i1}
  execsql {PRAGMA wal_checkpoint}
}

do_test wal_sync-3.1 {
  wal_sync_func_c
  wal_sync_func_d
  execsql {
    SELECT * FROM c
  }
} {1}

do_execsql_test wal_sync-3.2 {
  BEGIN;
  INSERT INTO c VALUES(2);
  COMMIT;
  SELECT count(*) FROM c;
} {2}

ifcapable windowfunc {
  do_execsql_test wal_sync-3.3 {
    BEGIN;
    INSERT INTO c VALUES(3);
    COMMIT;
    SELECT * FROM c WHERE z = 3;
  } {3}
}

proc wal_sync_func_e {} {
  execsql {CREATE TABLE d(w)}
  execsql {CREATE VIEW d_v AS SELECT w FROM d}
  execsql {INSERT INTO d VALUES(1)}
}

proc wal_sync_func_f {} {
  execsql {DROP VIEW d_v}
  execsql {PRAGMA wal_checkpoint}
}

do_test wal_sync-4.1 {
  wal_sync_func_e
  wal_sync_func_f
  execsql {
    SELECT * FROM d
  }
} {1}

do_execsql_test wal_sync-4.2 {
  BEGIN;
  INSERT INTO d VALUES(2);
  COMMIT;
  SELECT count(*) FROM d;
} {2}

do_teardown_test wal_sync
finish_test