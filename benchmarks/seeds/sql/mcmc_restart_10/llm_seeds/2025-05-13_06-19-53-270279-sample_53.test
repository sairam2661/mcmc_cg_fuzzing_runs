set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix concurrent

set ::timeout 60000

proc concurrent_proc {} {
  global concurrentargs
  lappend concurrentargs
  expr {1}
}

proc error_func {} {
  return "concurrent error"
}

set concurrentargs {}

proc test_insert {} {
   db eval {INSERT INTO t1 VALUES(1, 2, 3)}
}

proc test_select {} {
  db eval {SELECT * FROM t1}
}

proc test_delete {} {
  db eval {DELETE FROM t1}
}

do_test concurrent-1.1 {
  execsql {
    CREATE TABLE t1(a, b, c);
    INSERT INTO t1 VALUES(10, 20, 30);
  }
  dict create
} {{}}

do_test concurrent-1.2 {
  db eval {SELECT count(*) FROM t1}
} {1}

do_execsql_test concurrent-1.3 {
  BEGIN;
  INSERT INTO t1 VALUES(40, 50, 60);
  COMMIT;
  SELECT count(*) FROM t1;
} {2}

concurrent_test concurrent_insert {} {
  set concurrentargs
  test_insert
}

concurrent_test concurrent_select {} {
  set concurrentargs
  test_select
}

concurrent_test concurrent_delete {} {
  set concurrentargs
  test_delete
}

catch {thread start test_insert}
do_test concurrent-1.4 {
  list
} { }

concurrent_test concurrent_error {} {
  error_func
}
do_test concurrent-1.5 {
  error_func
} {concurrent error}

do_test concurrent-1.6 {
  db close
  db open inmemory test
  db eval {BEGIN; INSERT INTO t1 VALUES(100, 200, 300);}
} {}

do_test concurrent-1.7 {
  db close
  set test_counter 0
  set results {}
  for {set i 0} {$i 5000} {incr i} {
    set test_counter $i
    set results {}
    db open inmemory test
    db eval {BEGIN; SELECT 0 FROM t1;}
    lappend results $result
    lappend results $test_counter
  }
} {0}

finish_test