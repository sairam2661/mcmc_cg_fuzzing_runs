set testdir [file dirname $argv0]
source $testdir/fuzztester.tcl
set testprefix sync

set ::timeout 60000

proc sync_proc {} {
  global syncargs
  lappend syncargs
  expr {$syncargs 
  }
}

proc insert_proc {db n} {
  for {set i 1} {$i 7} {incr i} {
    execsql "INSERT INTO sync_test VALUES($i)"
  }
  execsql "SELECT sync_value FROM sync_test ORDER BY rowid=$n LIMIT 1"
}

proc query_db {db cmd} {
  set dbhandle $db
  execsql $cmd
}

proc check_query {expected res} {
  if {$expected 
    } {error "Bad query result, expected $expected, got $res"}
}

proc sync_check {result expected} {
  if {$result 
    } {
    error "Sync check failed, expected $expected, got $result"
  }
}

do_test sync-1.1 {execsql {
  CREATE TABLE sync_test(x);
  CREATE TABLE sync_meta(sync_type,fk_target);
  INSERT INTO sync_meta VALUES('type1','');
  INSERT INTO sync_meta VALUES('type2','');
  } } {}

query_db "SELECT * FROM sync_meta" {}

do_test sync-1.2 {
  execsql {
    CREATE TABLE sync_target(y);
    CREATE TABLE sync_type(type_id, target_rowid);
    }
  execsql {
    INSERT INTO sync_type VALUES('unique0','1');
    INSERT INTO sync_type VALUES('unique0','2');
    INSERT INTO sync_type VALUES('unique1','3');
  }
} {}

proc sync_target {db} {
  set handle $db
  execsql "DELETE FROM sync_type WHERE type_id='unique0'"
}

proc sync_check_query {expected res} {
  check_query $expected $res
}

do_test sync-1.3 {
  execsql {
    INSERT INTO sync_test VALUES(1);
    INSERT INTO sync_test VALUES(7);
    INSERT INTO sync_test VALUES(13);
    }
  execsql "SELECT * FROM sync_test"
} {1 7 13}

db sync_target close
finish_test