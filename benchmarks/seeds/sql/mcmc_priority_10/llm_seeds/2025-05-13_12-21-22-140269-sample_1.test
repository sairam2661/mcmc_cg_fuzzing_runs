set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix test_sync

set ::timeout 60000
do_test setup-1.1 {
  execsql {
    PRAGMA journal_mode="WAL";
    PRAGMA synchronous=2;
  }
} {}

proc test_insert {} {
  global syncargs
  set syncargs {}
  execsql {
    INSERT INTO b(x) VALUES(1);
    INSERT INTO c(x) VALUES(2);
  }
  lappend syncargs
}

set testname {test_insert}
proc execsql_test1 {n s q a1 a2 a3} {
  global db
  set res {}
  if {$a3 ne ""} {
    do_test $n {
      set res1 $a1
      set res2 $a2
      execsql $q
      lappend res $res1
      lappend res $res2
      $res3 $a3
    } $a3
  } else {
    do_test $n {
      set res1 $a1
      set res2 $a2
      execsql $q
      lappend res $res1
      lappend res $res2
    } $a3
  }
  return $res
}

do_test sync-1.1 {
  execsql {
    CREATE TABLE b(x);
    CREATE TABLE c(x);
  }
  execsql {
    SELECT name FROM sqlite_master
    WHERE type='table'
  }
} {b c}

do_execsql_test sync-1.2 {
  BEGIN;
  INSERT INTO b VALUES(4);
  INSERT INTO c VALUES(4);
  COMMIT;
  INSERT INTO b VALUES(5);
  INSERT INTO c VALUES(5);
  PRAGMA wal_checkpoint;
  SELECT * FROM c;
  SELECT * FROM b;
} {4 4 5 5}

do_execsql_test sync-1.3 {
  INSERT INTO b VALUES(7);
  INSERT INTO c VALUES(9);
  SELECT * FROM b;
  SELECT * FROM c;
  SELECT * FROM c;
  SELECT * FROM c WHERE x = 9;
  SELECT * FROM c WHERE x = 9;
} {7 7 9 9 9 9 9 9}

do_test cleanup-1.1 {
  execsql {
    PRAGMA journal_mode;
    PRAGMA synchronous;
  }
} {WAL 2}

do_test cleanup-1.2 {
  execsql {
    DROP TABLE c
  }
} {}

do_test cleanup-1.3 {
  execsql {
    DROP TABLE b
  }
} {}

finish_test