set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix sqlite_sort

set ::timeout 60000

proc sorted_ids {} {
  set ids {}
  foreach {id} {
    5 6 4 9 1 3 8 2 7
  } {
    lappend ids $id
  }
  return $ids
}

proc check_sorted_ids {result exp} {
  set ids {}
  foreach v $result {
    lappend ids $v
  }
  return { $ids eq $exp }
}

proc do_test_sort_sql {tn sql expected} {
  do_execsql_test $tn {
    CREATE TABLE t1(id, x, y);
    INSERT INTO t1(id, x, y) VALUES  (5, 1, 2);
    INSERT INTO t1(id, x, y) VALUES  (6, 3, 4);
    INSERT INTO t1(id, x, y) VALUES  (4, 5, 6);
    INSERT INTO t1(id, x, y) VALUES  (9, 7, 8);
    INSERT INTO t1(id, x, y) VALUES  (1, 9, 8);
    INSERT INTO t1(id, x, y) VALUES  (3, 1, 0);
    INSERT INTO t1(id, x, y) VALUES  (8, 3, 4);
    INSERT INTO t1(id, x, y) VALUES  (2, 1, 2);
    INSERT INTO t1(id, x, y) VALUES  (7, 5, 8);
    COMMIT;
    SELECT x FROM t1 WHERE id = 5
  } $expected
}

do_test sync-1.1 {
  execsql {
    CREATE TABLE a(x);
    INSERT INTO a VALUES(1,2,3);
  }
  execsql {SELECT count(*) FROM a}
} {3}

do_execsql_test sync-1.2 {
  BEGIN;
  INSERT INTO a VALUES(4);
  COMMIT;
  SELECT count(*) FROM a;
} {4}

set dbhandle1 {}
do_execsql_test sync-1.4  {
  SELECT x FROM a WHERE id = 4;
} {1}

do_execsql_test sync-1.5 {
  SELECT rowid FROM a;
} {1 2 3 4}

set dbhandle2 {}
do_execsql_test sync-1.6 {
  SELECT x FROM a WHERE id = 2;
} {2}

do_execsql_test sync-1.7 {
  SELECT a FROM a WHERE a = 2;
} {2}

ifcapable journalMode {
  catchsql {PRAGMA journal_mode = 'DELETE'}
} {0 {}}

do_execsql_test sync-1.8 {
  CREATE TABLE b(x);
  INSERT INTO b VALUES(2);
} {1}

do_test sync-1.9 {
  set ids_
  foreach id_ {
    5 6 4 9 1
  } {
    lappend ids_ $id_
  }
  set ids_
  sorted_ids
} {1 2 3 4 5 6 7 8 9}

do_test sync-1.10 {
  check_sorted_ids {
    1 9 8
    2 1 2
    3 1 0
    4 5 6
    5 7 8
    6 3 4
    7 5 8
    8 3 4
    9 7 8
  }
  sorted_ids
} {1 {1 2 3 4 5 6 7 8 9}}

do_execsql_test sync-1.11 {
  SELECT * FROM b
} {1 2}

execsql {
  DROP TABLE b
}

finish_test