set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix locking

set ::timeout 60000
set up_globals {}

proc up_globals {} {
  global up_globals
  set up_globals {}
}

proc check_integrity {} {
  execsql {
    SELECT * FROM m;
    SELECT rowid FROM m WHERE type='x';
  }
}

proc check_select_rows {} {
  execsql {
    SELECT rowid FROM m;
  }
}

proc sync_init {} {
  global up_globals
  lappend up_globals "1"
  if { $up_globals eq "2" } {
    execsql {
      BEGIN;
    }
  }
}

proc sync_commit {} {
  global up_globals
  if { $up_globals eq "2" } {
    execsql {
      COMMIT;
    }
  }
  set up_globals {}
}

do_test locking-1.1 {
  set up_globals {}
  execsql {
    CREATE TABLE m(a,type);
  }
  execsql {
    INSERT INTO m VALUES('y','x');
    INSERT INTO m VALUES('z','y');
  }
  set results {}
  for { set i 1 } { $i le 11 } { incr i } {
    catcherror {
      execsql {INSERT INTO m VALUES('x','y')}
    }
  }
  if { $results eq {} } {
    execsql {INSERT INTO m VALUES('x','y')}
  }
  check_integrity
  sql_error
} {none}

set up_globals {}
set up_globals {}
set up_globals {}
set up_globals {}
set up_globals {}

ifcapable wal_journal {
  set up_globals 3
}

do_execsql_test locking-1.2 {
  SELECT * FROM m;
  SELECT rowid FROM m WHERE a='y';
} {y x 1 1 2 2 z y 3}

do_execsql_test locking-1.3 {
  BEGIN;
  INSERT INTO m VALUES('z','y');
  COMMIT;
  SELECT count(*) FROM m WHERE a='z';
} {1}

do_test locking-1.4 {
  execsql {
    SELECT ROWID FROM m;
  }
  check_select_rows
} {1 2 3}

do_test locking-1.5 {
  sync_init
  error {lock locked}
  check_select_rows
} {1 2 3}

do_test locking-1.5 {
  execsql "
    INSERT INTO m VALUES('z', 5)
  "
  set up_globals 7
  error {too many active wal masters}
  check_integrity
} {1 2 3}

do_test locking-1.5 {
  set up_globals {}
  set up_globals 12
  error {busy database}
  check_select_rows
} {1 2 3}

do_test locking-1.5 {
  error {error code 4}
  check_select_rows
} {1 2 3}

do_test locking-1.5 {
  set up_globals {}
  set up_globals 18
  error {busy database}
  check_select_rows
} {1 2 3}

finish_test