set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix nested_transactions

set ::timeout 60000
set testprefix nested_transactions

proc nestedProc {data} {
  set result SQL
  if {"$data" eq "END"} {
    return $result
  } else {
    append result "INSERT INTO t1 VALUES($data); "
    return $result
  }
}

proc exec_nested_tests {testprefix {nTests 5}} {
  set db sqlite3_test_db
  execsql {
    CREATE TABLE t1(x);
  }

  foreach {i sql} {
    1 "SELECT 1;"
    2 "INSERT INTO t1 VALUES(2);"
    3 "SELECT * FROM t1 WHERE x=2;"
    4 "INSERT INTO t1 VALUES(4), (5), (6);"
    5 "SELECT * FROM t1;"
  } {
    set res
    do_execsql_test "${testprefix}.[incr i]" $sql $res
  }

  for {set i 1} {$i $nTests} {incr i} {
    if {$i $nTests} {
      break
    } elseif {$i eq 1} {
      set res
    } elseif {$i eq 2} {
      do_execsql_test "${testprefix}.[expr $i]" {
        BEGIN;
        INSERT INTO t1 VALUES(2)
      } $res
    } elseif {$i eq 3} {
      set res
    } elseif {$i eq 4} {
      do_execsql_test "${testprefix}.[expr $i]" {
        BEGIN;
        INSERT INTO t1 VALUES(4);
        INSERT INTO t1 VALUES(5);
        INSERT INTO t1 VALUES(6)
      } $res
    } elseif {$i eq 5} {
      set res
    } else {
      do_execsql_test "${testprefix}.[expr $i]" {
        BEGIN;
        INSERT INTO t1 VALUES(8);
      } $res
    }
  }

  db close
}

do_test nested_transactions-1.1 {
  db eval {
    SELECT count(*) FROM t1
  }
  execsql {
    DROP TABLE t1
  }
} {0}
ifcapable journalMode {
  do_execsql_test nested_transactions-1.2 {
    PRAGMA journal_mode
  } {wal}
}

do_test nested_transactions-1.3 {
  nestedProc 1
  set res "INSERT INTO t1 VALUES(1); "
  execsql {
    DROP TABLE t1
  }
} {SQL}
exec_nested_tests nested_transactions
do_test nested_transactions-2.1 {
  tsqlt_check
} {1}

finish_test