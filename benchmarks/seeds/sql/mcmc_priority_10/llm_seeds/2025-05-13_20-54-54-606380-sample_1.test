set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi

set ::timeout 60000
set sqlite_options {
  wal
  journal_mode
  no_vacuum
  foreign_key
  temp_vacuum
  read_uncommitted
  read_write_uncommitted
  no_wal
  no_foreign_key
  vacuum
}

set dbid int

proc setup_database {opt} {
  db close
  db handle "test.db"
  db {PRAGMA journal_mode = '$opt'}
  db {PRAGMA mmap_size = 10000000}
}

proc check_mmap_size {} {
  execsql {PRAGMA mmap_size}
}

proc test_index {} {
  db eval {CREATE TABLE t4(a, b)}
  execsql {CREATE INDEX i4 ON t4(b)} 
  execsql {INSERT INTO t4 VALUES(1, 2)}
  execsql {SELECT * FROM t4 WHERE b = 2}
}

proc create_tables {} {
  execsql {
    CREATE TABLE a1(id1, id2, x, y);
    CREATE TABLE b1(id1, id2, x, y);
    CREATE TABLE c1(id1, id2, x, y);
    CREATE TABLE d1(id1, id2, x, y);
    CREATE TABLE a2(id1, id2);
    CREATE TABLE b2(id1, id2);
    CREATE INDEX i1 ON a1(x);
    CREATE INDEX i2 ON b1(y);
    CREATE INDEX i3 ON c1(id1);
    CREATE INDEX i4 ON d1(id2);
  }
}

proc check_id {db xids} {
  for {set i 100} {$i le 400} {incr i} {
    sqlite3 db $db
    foreach {id} $xids {
      if {$id2 eq $id} {throw {bad xid $id2}}
    }
  }
}

do_test "multi-1.0"  {
  setup_database wal
  db transaction {catch {db eval {INSERT INTO a1 VALUES(1, 2, 3, 4)}}}
  check_mmap_size
  expr {1}
} {1}

do_checksql "multi-1.1" {
  PRAGMA journal_mode
} {wal}

do_checksql "multi-1.2" {
  SELECT * FROM a1
} {1 2 3 4}

do_test "multi-1.3"  {
  check_id a1 1 9 10 12
  finish_test
}

do_test "multi-2.0"  {
  setup_database journal_mode
  db transaction {catch {db eval {INSERT INTO a2 VALUES(1, 2)}}}
  check_mmap_size
  expr {1}
} {1}

do_checksql "multi-2.1" {
  PRAGMA journal_mode
} {journal_mode}

do_checksql "multi-2.2" {
  SELECT * FROM a2
} {1 2}

do_checksql "multi-2.3" {
  SELECT COUNT(*) FROM a2
} {1}

do_test "multi-3.0"  {
  setup_database no_vacuum
  db transaction {catch {db eval {INSERT INTO b1 VALUES(1, 2, 3, 4)}}}
  check_mmap_size
  expr {1}
} {1}

do_checksql "multi-3.1" {
  PRAGMA journal_mode
} {wal}

do_checksql "multi-3.2" {
  SELECT * FROM b1
} {1 2 3 4}

do_test "multi-3.3"  {
  check_id b1 2 7 8 9
  finish_test
}

finish_test