set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi_thread_test

set ::timeout 60000

proc random_string {} {
  set str ""
  for {set i 0} {$i 10} {incr i} {
    lappend str $i
  }
  return $str
}

proc test_thread {thread_id start_sql end_sql} {
  set thread_sql $start_sql
  while 1 {
    set sql "$thread_sql;$end_sql"
    uplevel catch $sql
    break
  }
}

proc check_result {result} {
  if {$result} {
    return 1
  } else {
    return 0
  }
}

ifcapable temp_tables {
  do_test multi_thread-1.1 {
    set sql {
      CREATE TABLE a(a, b);
      INSERT INTO a VALUES(1, 2);
    }
    test_thread 1 $sql
    execsql {
      SELECT a FROM a
    }
  } {1}
}

ifcapable journal_modewal {
  do_execsql_test multi_thread-1.2 {
    PRAGMA journal_mode = 'WAL';
  } {wal}
}

do_test multi_thread-1.3 {
  set thread_ids {}
  for {set i 1} {$i 5} {incr i} {
    set result 0
    set thread_sql {
      INSERT INTO a VALUES(3, 4);
    }
    catch {set tid spawned_thread}
    spawned_thread $tid $thread_sql
    lappend thread_ids $tid
  }
  for {set i 1} {$i 5} {incr i} {
    set result 0
    set tid $i
    while {lsearch $thread_ids $tid} {
      catch {unset thread}
      thread $tid test_thread
    }
  }
  execsql {
    SELECT b FROM a
  }
} {4 4 4 4 4}

do_test multi_thread-1.4 {
  set start_sql {
    PRAGMA journal_mode = 'WAL'
  }
  set end_sql {
    SELECT count(*) FROM a;
  }
  test_thread 2 $start_sql $end_sql
  execsql {
    SELECT count(*) FROM a
  }
} {5}

if {0} {
  do_test multi_thread_1.5 {
    for {set i 1} {$i 5000} {incr i} {
      execsql {
        INSERT INTO a VALUES(3, 4)
      }
    }
  } {}
}

finish_test