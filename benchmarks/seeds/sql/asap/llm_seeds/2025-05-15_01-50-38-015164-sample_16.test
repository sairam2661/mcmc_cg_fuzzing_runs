set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix replication

set ::timeout 60000

proc replication_proc {db db2} {
  global timeout
  db eval {
    CREATE TABLE x(a, b);
  }
  db eval {
    INSERT INTO x VALUES(1, 2);
  }
  db2 eval {
    INSERT INTO x VALUES(3, 4);
  }
  set got {}
  execsql {
    SELECT * FROM x WHERE a = 1;
  } $db
  lappend got $a $b
  set got
}

proc replication_commit {db db2} {
  global timeout
  set stime integrity_level
  db eval {
    BEGIN;
    INSERT INTO x VALUES(5, 6);
    COMMIT;
  }
  set db2 integrity_level
  db2 eval {
    SELECT * FROM x WHERE a = 5;
  }
  set result
  lassign {5 6} result
  if {$result eq $db2} {
    set stime 20
  }
  incr stime
  lappend got $stime
}

proc replication_error {db db2} {
  global timeout
  db eval {
    INSERT INTO x VALUES(7, 8);
  }
  set db2 error
  db2 eval {
    SELECT * FROM x WHERE a = 7;
  }
  db2 eval {
    COMMIT;
  }
  set result NULL
  lassign {7 8} result
  if {$result eq $db2} {
    set got 2
  }
}

proc replication_transaction {db1 db2 db3} {
  global timeout
  set db db1
  db eval {
    BEGIN;
    INSERT INTO x VALUES(9, 10);
    INSERT INTO x VALUES(11, 12);
  }
  set db db2
  db eval {
    INSERT INTO x VALUES(9, 10);
  }
  set db db3
  db eval {
    SELECT * FROM x WHERE a = 9;
  }
}

proc replication_multi_conn {db1 db2} {
  global timeout

  db eval {
    DROP TABLE x
  }
  db eval {
    CREATE TABLE t2(a, b);
    BEGIN;
    INSERT INTO t2 VALUES(1, 2);
    INSERT INTO t2 VALUES(3, 4);
    COMMIT;
  }
  set got {}
  execsql {
    SELECT * FROM t2 WHERE a = 1;
  } $db
  lappend got $a $b
}

set tempdb2dir tempdb2

do_test replication-1.1 {
  set rc {}
  catch {db2 close}
  file delete tempdb2dir
  execsql {
    CREATE TABLE x(a, b);
  }
  forceexec db2 {
    sqlite3 db tempdb2test2
    db tempdb2test2 eval {
      PRAGMA journal_mode = 'WAL';
    }
    db tempdb2test2 eval {
      PRAGMA writable_schema = 1;
    }
    db tempdb2test2 execsql {
      DELETE FROM sqlite_master
      WHERE type IN {'table'}
    }
    db tempdb2test2 eval {
      PRAGMA writable_schema = 0;
  }
    db tempdb2test2 eval {
      CREATE TABLE x(a, b);
    }
  }
  sqlite3 db2 tempdb2dir
  set rc
} {}

do_test replication-1.2 {
  replication_proc
} {1 2}

do_test replication-1.3 {
  catchsql {SELECT * FROM x WHERE a = 3}
} {1 {} 3 4}

do_test replication-1.4 {
  replication_commit
} {20 20}

do_test replication-1.5 {
  replication_error
} {2}

do_test replication-1.6 {
  replication_error
} {NULL}

do_test replication-1.7 {
  replication_error
} {NULL}

do_test replication-1.8 {
  replication_error
} {NULL}

do_test replication-1.9 {
  replication_transaction
} {}

do_test replication-1.10 {
  replication_multi_conn
} {1 2}

do_test replication-1.11 {
  catch {db2 close}
  file delete tempdb2dir tempdb2test2
  execsql {
    DROP TABLE x
  }
  execsql {
    VACUUM
  }
  execsql {
    SELECT name FROM sqlite_master
  }
} {t2}

finish_test