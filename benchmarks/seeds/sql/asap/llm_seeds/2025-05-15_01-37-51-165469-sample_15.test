set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi_test

set ::timeout 60000
set db test_async

db eval {
  CREATE TABLE b(x,blob);
  CREATE TABLE c(x,clob,glob,dob);
  CREATE TABLE d(x,dob,dtob,dobt,dtobt);
  CREATE TABLE e(id,x);
}

proc async_callback {} {
  global db tcl_interactive
  if { $tcl_interactive } {
    return
  }
  set sql {
    BEGIN;
    INSERT INTO b VALUES(1,'blob_value');
    INSERT INTO c VALUES(1,'clob_value', 'glob_value', 'dob_value');
    INSERT INTO d VALUES(1, 'dobt_value', 'dtobt_value', 'dobt_value');
    INSERT INTO e VALUES(1,1);
    COMMIT;
  }
  db eval $sql
}

proc async_query {} {
  global db
  set sql {
    SELECT * FROM d;
    SELECT * FROM b;
    SELECT * FROM c;
    SELECT * FROM d;
    SELECT * FROM e;
    SELECT * FROM c;
    SELECT * FROM b;
  }
  set res {}
  execsql_loop $sql {
    lappend res $res
  }
  return $res
}

do_test multi-1.1 {
  execsql {
    DELETE FROM b
    DELETE FROM c
    DELETE FROM d
    DELETE FROM e
  }
} {}

do_execsql_test multi-1.2 {
  INSERT INTO b VALUES(1,'blob_value')
 
    
} {1 blob_value}

do_execsql_test multi-1.3 {
  CREATE TABLE f(x,clob);
  BEGIN;
  INSERT INTO f VALUES(2, 'clob_value_f');
  COMMIT;
} {2 clob_value_f}

do_test multi-2.1 {
  set cbid 1
  set db timeout 10
  doeval $testdir Walton_tester db
  WAL set async_callback $cbid
} {}

do_test multi-2.2 {
  async_query
  lrange $async_query 0 0
} {1 blob_value}

do_test multi-2.3 {
  execsql {
    SELECT * FROM e
  }
} {1 1}

do_execsql_test multi-3.1 {
  CREATE INDEX idx_b_x ON b(x);
  BEGIN;
  INSERT INTO b VALUES(2, 'blob_value_2');
  
  COMMIT;

} {2 blob_value_2}

do_test multi-3.2 {
  set async_query
} {0 1 blob_value 1 clob_value glob_value dob_value 1 dob_value dtobt_value 
    dob_value 1 1 {} 0 2 clob_value_f}

ifcapable wal {
  ifcapable  wal {
    WAL db async_callback {}
    catch { db WAL finish db}
  }
} 
do_execsql_test testmulti-3.3 {
PRAGMA wal_checkpoint;

} {}

finish_test