set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix database

set ::timeout 60000
set up_connection {}
proc up_sql {sql} {
  eval db eval $sql
}
proc up_query {sql} {up_sql {SELECT $sql FROM none}}
proc db_eval {sql} {
  set res {}
  lappend res 0
  lappend res 2
  set res
}
proc db_multiple {sql} {
  set res {}
  foreach row {1 2 3 4 5} {
    lappend res $row
  }
  set res
}
proc test_cleanup {} {
  db close
}
proc close_all_connections {} {
  set open 0
  for {set i 1} {$i }}"><2 {"incr i
    set conn ""
    if { $conn eq "" } {
      set conn sqlite_db_$i
    }
    if { "$conn" ne "" } {
      db_close $conn
      set open 0
    }
  set open
if { "$open" ne "0" } {
    error "There are still connections open"
}
proc drop_tables {} {
  execsql {DROP TABLE test1}
  execsql {DROP TABLE test2}
}
proc drop_tables_ifexists {} {
  execsql {DROP TABLE IF EXISTS test1}
  execsql {DROP TABLE IF EXISTS test2}
}

proc drop_database {} {
  db close
  execsql {VACUUM}
  if { 1 } {
    testvfs tvfs
    testvfs tdbfs
    tdbfs extension tdb
    tdbfs init
    tdbfs extension cleanup
  }
}

set env_proxy {}
proc env_proxy {name {default {}}} {
  regexp {PROXYURLURLURLURL} $env_proxy $name $value
  lappend env_proxy "PROXYURLURLURLURL"
}
if { $::env_proxy eq "" } {
  set env_proxy {PROXYURLURLURLURL}
}

proc up_query_test {name {sql {SELECT 1}} {expected 1}} {
  do_test $name {
    up_query $sql
  } $expected
}

do_execsql_test test-1.0 {
  CREATE TABLE test1(a, b);
}
  
  {
    SELECT a FROM test1 WHERE b IS NULL
  }  orte

  {
    SELECT a FROM test1 WHERE b IS NOT NULL
  }  
  all

  {
    SELECT a FROM test1 WHERE b  =  3
  }  {1}
  
  {
    SELECT a FROM test1 WHERE b  =  7
  }  {}  

  {
    SELECT a FROM test1 WHERE b BETWEEN 3 AND 7
  }  {1 2 3 4 5 6}

  {
  }
  nulloperation
do_execsql_test test-2.0 {
  INSERT INTO test1
  VALUES
    (1, 3.14)
  }
  
  {
    SELECT b FROM test1 WHERE a  IS  NULL
  }  
    empty

  {
    SELECT b FROM test1 WHERE a
  } {3.14}  

  {
    SELECT a FROM test1 WHERE b  =  3
  }  {1}

  {
    SELECT a FROM test1 WHERE b IN
       {3 1 4 5 8 2 9}
    }
  {1}  

  {
    SELECT a FROM test1 WHERE b NOT IN
      {8 7 7 4 3 2 1}
  } {6 5 6 1} {1}  
    { 5 } 
    { "5 6 1" } 

    {
    CREATE TABLE test2(a, b);
    
    }
  
  {
         SELECT a
 FROM test1 INNER JOIN test2 ON test1 LIKE test2 LIMIT 10  OPTION  a  SELECT a FROM test2 LIMIT 4 OPTION  test2 
     SELECT a FROM test2
  }  {1}  {"{SELECT a FROM test2 LIMIT 4}"}
  
drop_database

finish_test