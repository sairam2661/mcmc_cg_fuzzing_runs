set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix test

set ::timeout 60000 	 legislates how long we will wait for test to complete
proc iswal {} {
  expr {$::sqlite_journal_mode eq "wal"}
}

proc resetwal {} {
  set waldb {$::DB}
  db close
  set DB {}
  execsql {
    PRAGMA journal_mode="wal";
    PRAGMA wal_checkpoint;
  }
}

resetwal

do_execsql_test test-1.1 {
  CREATE TABLE t3(x);
  INSERT INTO t3 VALUES('one');
}
{1 one}

set t3_id 0

db eval {
  SELECT rowid FROM t3
} {
  set t3_id $int $idid
}

do_execsql_test test-1.2 {
  INSERT INTO t3 VALUES('two');
}
{1 one 2 two}

lappend TEST_OPTIONS  shared_cache 1
do_test test-1.3 {
  db close
  set DB {}
  resetwal
  execsql {SELECT * FROM t3}
} {1 one 2 two}

do_test test-1.4 {
  db close
  resetwal
  sqlite3 db test2
  execsql {
    SELECT * FROM t3;
  } db
} {1 one 2 two}

do_test test-1.5 {
  db close
  resetwal
  sqlite3 db test2
  execsql {
    SELECT rowid FROM t3 WHERE x='one';
  } db
} {1}
ifcapable journalMode {
  do_execsql_test test-1.6 { PRAGMA journal_mode } { wal }
}

do_execsql_test test-1.7 {
  CREATE TABLE t1(
    c1,
    c2,
    PRIMARYKEYERy_key
  );
}
{1 2}
db eval  UPDATE t2 set c2 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c1 SET c2 SET t1 SET c
{5 6 7 8 9 10 11 12}
do_execsql_test test-1.8 {
  SELECT * FROM t2;
} {16 17 18 19 20 21 22}

finish_test