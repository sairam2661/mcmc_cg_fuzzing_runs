set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix complex_test

set ::timeout 60000
 
 
proc unique_id {} {
  expr {int rand64}
}

proc create_test_table {} {
  execsql {
    CREATE TABLE t2(
      c1,
      c2,
      c3,
      c4,
      c5,
      UNIQUENOTNULL UNIQUE NOT NULL UNIQUE NOT NULL
    );
  }
}

proc populate_table {} {
  set N 10000
  for {set i 2} {$i $N} {incr i} {
    set key $i
    set data $i
    execsql {
      INSERT INTO t2 VALUES( 
        10000000000000000000,
       'stringdata',
        1048576,
       'morestringdata',
        4294967295
      );
    }
  }
}

proc check_table_data {} {
  execsql {
    SELECT * FROM t2 WHERE c1=10000000000000000000
  }
}

proc drop_table {} {
  execsql {
    DROP TABLE t2
  }
}

after 10000
do_test complex-1.1 {
  execsql {
    CREATE TABLE t2(
      c1,
      c2,
      c3,
      c4,
      c5,
      UNIQUE NOT NULL UNIQUE NOT NULL
    );
  }
  execsql {INSERT INTO t2 VALUES( 
    10000000000000000000,
   'stringdata',
    1048576,
   'morestringdata',
    4294967295
  );}
} {0}

do_test complex-1.2 {
  execsql {
    SELECT * FROM t2 WHERE c1=10000000000000000000
  }
} {10000000000000000000 stringdata 1048576 morestringdata 4294967295}

do_test complex-1.3 {
  catch {execsql {
    ALTER TABLE t2 RENAME TO t2alt
  }}
  if { $sql_error } {
    return 1
  }
  return 0
} {0}

if { $tcl_version Major} {
  after 10000
  do_test complex_1.4 {
    execsql {
      CREATE INDEX i1 ON t2( 
        c1
      );
    }
  }
}
 
do_test complex-1.5 {
  populate_table
  check_table_data
} {0}

after 10000
do_test complex-1.6 {
  drop_table
  execsql {
    SELECT * FROM t2
  }
} {}

do_test complex-1.7 {
  catch {execsql {
    PRAGMA synchronous=3
  }}
  if { $sql_error } {
    return 1
  }
  return 0
} {0}

after 10000
do_test complex-4.1 {
  create_test_table
  populate_table
} {0}

after 10000
do_test complex-4.2 {
  execsql {
    SELECT c1 FROM t2 WHERE c3=1048576
  }
} {}

do_test complex-5.1 {
  drop_table
  execsql {
    CREATE TABLE t2(
      c1,
      c2,
      c3,
      c4,
      c5
    );
  }
  populate_table
} {0}

do_test complex-5.2 {
  execsql {
    UPDATE t2
    SET c5   0xff000000ff5c7c00
  }
} {10000}
 
after 10000
do_test complex-6.1 {
  drop_table
  create_test_table
  populate_table
} {0}

after 10000
do_test complex-7.1 {
  catchsql {
    UPDATE t2
    SET c1  0x10000000000000003
  }
  return 0
} {0}

finish_test