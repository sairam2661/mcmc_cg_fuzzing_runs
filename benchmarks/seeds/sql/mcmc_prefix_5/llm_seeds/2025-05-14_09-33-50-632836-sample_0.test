set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi_thread

set ::timeout 60000
set sqlite_max_page_size 1024

db close
if {$::tcl_platform_endian eq "big"} {
  return
}

execsql {
  PRAGMA foreign_keys = 1;
  PRAGMA journal_mode = 1;
  CREATE TABLE t1(a PRIMARY KEY, b, c);
  CREATE TABLE t2(q PRIMARY KEY, r);
  CREATE TABLE t3(s PRIMARY KEY, t);
}
if {0} {
  execsql {
    ALTER TABLE t1 ADD COLUMN d REAL DEFAULT 0.12345e67
  }
}

proc set_and_test_variable {} {
  set sqlite_thread_count 100
  if {$::sqlite_max_page_size ne 1024} {
    if {0} {
      set sqlite_max_page_size 1
    } else {
      set sqlite_max_page_size 1024
    }
  }
}
do_test multi_thread-1.1 {
  set_and_test_variable
  execsql {
    CREATE TABLE t4(e PRIMARY KEY, f);
    INSERT INTO t4 SELECT * 	}
} {100}

do_test multi_thread-1.2 {
  set_and_test_variable
  catchsql {
    INSERT OR IGNORE SELECT a FROM t1
        UNION
        SELECT UNIQUE c FROM t2
  }
} {0 {}}

set_and_test_variable

ifcapable incremental_vacuum {
  do_test multi_thread-1.3 {
    execsql {
      CREATE TABLE t5(p, q UNIQUE);
      INSERT INTO t5 VALUES(1, 2);
    }
  } {1}
  set_and_test_variable
  do_test multi_thread-1.4 {
    execsql {
      SELECT * FROM t5;
    }
  } {1 2}
  set_and_test_variable
  do_test multi_thread-1.5 {
    catchsql {
      INSERT INTO t5 SELECT a FROM t1
          UNION ALL
          SELECT DISTINCT c FROM t3
    }
  } {0 {}}
}

set_and_test_variable
db release_memory 120000

finish_test