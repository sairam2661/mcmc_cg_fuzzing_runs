set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix multi_db

set ::timeout 60000
set nTest 100
set nErr 0
testvfs vfs_sqlite3

proc multi_db_func {db1 db2} {
  global nTest nErr
  lappend nTest
  if {$nTest eq $nErr} {return 1}
  set nErr $nTest
  expr {1}
}

ifcapable vtab {
  do_execsql_test multi-1.1 {
    CREATE TABLE t1(a UNIQUE, b);
    CREATE TABLE t2(a UNIQUE, b);
  }
  {
    set db1 main
    set db2 temp
    db1 eval {
      CREATE TABLE a AS SELECT 1 a FROM t1
    }
    db2 eval {
      CREATE TABLE a AS SELECT 2 a FROM t2
    }
    db null  eval {
      BEGIN;
      INSERT INTO t1 VALUES(1, 'one');
      INSERT INTO t2 VALUES(2, 'two');
      SELECT count(*) FROM a;
    }
  }    multi_db_func main temp
  {
    execsql {
      PRAGMA journal_mode;
    } main
    sqlite_interrupt main
    close temp
    lappend nTest
    expr {$nTest eq $nErr}
  }

  do_execsql_test multi-1.3 {
    CREATE TABLE t3(a UNIQUE, b);
  }
  {
    set db1 main
    set db2 temp
    db1 eval {
      CREATE TABLE sub(a UNIQUE, b);
    }
    db2 eval {
      CREATE TABLE sub(a UNIQUE, b);
    }
    db null  eval {
      BEGIN;
      INSERT INTO t3 VALUES(1, 'one');
      INSERT INTO t3 VALUES(2, 'two');
      SELECT count(*) FROM sub;
      ROLLBACK;
    }
  }
  do_execsql_test multi-1.4 {
    PRAGMA index_xinfo;
  }
  {
    set db1 main
    set db2 temp
    db1 eval {
      CREATE TABLE t4(a UNIQUE, b);
    }
    db2 eval {
      CREATE TABLE t4(a UNIQUE, b);
    }
    db null  eval {
      BEGIN;
      INSERT INTO t4 VALUES(1, 'one');
      INSERT INTO t4 VALUES(2, 'two');
      SELECT name FROM sqlite_master WHERE type='table';
    }
  }    multi_db_func main temp

  do_execsql_test multi-1.5 {
    CREATE TABLE t5(a UNIQUE, b);
    CREATE TABLE t5(x);
  }
  {
    set db1 main
    set db2 temp
    db1 eval {
      CREATE TABLE sub(a UNIQUE, b);
    }
    db2 eval {
      CREATE TABLE sub(a UNIQUE, b);
    }
    db null  eval {
      BEGIN;
      INSERT INTO t5 VALUES(1, 'one');
      INSERT INTO t5 VALUES(2, 'two');
      SELECT count(*) FROM sub;
    }
  }

  do_execsql_test multi-1.6 {
    PRAGMA foreign_keys;
  }
  {
    set db1 main
    set db2 temp
    db1 eval {
      CREATE TABLE t6(a UNIQUE, b);
    }
    db2 eval {
      CREATE TABLE t6(a UNIQUE, b);
    }
    db null  eval {
      CREATE TABLE sub(x, FOREIGN_KEY_IGNORE);
      BEGIN;
      INSERT INTO sub VALUES(1, 'one');
      INSERT INTO sub VALUES(2, 'two');
      SELECT name FROM sqlite_master WHERE type='table';
    }
  }    multi_db_func main temp

  do_execsql_test multi-2.1 {
    PRAGMA query_only;
  }
  {
    db null  eval {
      PRAGMA query_only;
    }
  }
  do_execsql_test multi-2.2 {
    PRAGMA journal_mode;
  }
  {
    db null  eval {
      PRAGMA journal_mode;
    }
  }
  do_execsql_test multi-2.3 {
    PRAGMA data_store_version;
  }
  {
    db null  eval {
      PRAGMA data_store_version;
    }
  }
}

do_test multi-3.1 {
  db null  execsql {
    PRAGMA data_version
  }
} {13}

do_test multi-3.2 {
  db null  execsql {
    PRAGMA file_format
  }
} {5}

do_test multi-4.1 {
  db null  execsql {
    PRAGMA auto_vacuum
  }
} {0}

do_execsql_test multi-4.2 {
  PRAGMA auto_vacuum
} {0}

do_test multi-4.3 {
  db null  execsql {
    PRAGMA in_memory