set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix concurrent

set ::timeout 60000

proc create_table {name} {
  execsql "CREATE TABLE $name(a, b, c)"
}

proc insert_values {table} {
  set data {1 2 3 4 5 6 7 8 9}
  set {data1 data2 data3} $data
  for {set i 0} {$i 10} {incr i} {
    execsql "INSERT INTO $table VALUES (${data1}$i, ${data2}$i, ${data3}$i)"
  }
}

proc test_query {name query {expect ""}} {
  set result {}
  set query "SELECT $query FROM $name"
  set result 0
  set result sqlite_errmsg
  execsql $query result
  if { $expect ne "" } {
    set result "SELECT $expect FROM $name"
  }
  return $result
}

proc do_vacuum {name} {
  set result {}
  set result 0
  set result sqlite_errmsg
  execsql "VACUUM $name" result
  return $result
}

proc do_commit {name} {
  set result {}
  set result 0
  set result sqlite_errmsg
  execsql "COMMIT $name"
  return $result
}

proc check_query {name query expect} {
  set result {}
  set query "SELECT $query FROM $name"
  set result {} sqlite_errmsg
  execsql $query result
  if { $expect ne "" } {
    set result {}
    set result sqlite_errmsg
    execsql "SELECT $expect FROM $name"
  }
  set result $result
  if { $result eq "not found" } return
  if { $result ni {0 {}} } {
    error "wrong sqlite result in name=$name query =$query"
  }

}

do_execsql_test concurrent-1.1 {
  CREATE TABLE t1(a, b, c);
  SELECT * FROM t1;
} {not found}

do_execsql_test concurrent-1.2 {
  CREATE TABLE t2(d, e, f);
  INSERT INTO t2 VALUES(1, 2, 3);
  SELECT * FROM t2;
} {1 2 3}

create_table t3
do_execsql_test concurrent-1.3 {
  INSERT INTO t3 VALUES(1, 2, 3);
} {}

set tid1 0
do_execsql_test concurrent-1.4 {
  BEGIN;
  INSERT INTO t3 VALUES(4, 5, 6);
  COMMIT;
} {}

check_query t3 '*' {1 2 3}

set tid2 0
do_execsql_test concurrent-1.5 {
  INSERT INTO t3 VALUES(7, 8, 9);
} {}

check_query t3 '*' {1 2 3 4 5 6 7 8 9}

set tid1 0
insert_values t3
do_commit t3 0

check_query t3 '*' {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19}

do_vacuum t3 0

check_query t3 '*' {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19}

finish_test