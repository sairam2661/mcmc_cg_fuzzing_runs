set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix query

set ::timeout 60000

proc run_query {sql} {
  global db
  set result {}
  db eval $sql
  set result
}

proc setup_test_db {name} {
  global db
  set dbhandle {}
  sqlite3 $dbhandle $name
  db $dbhandle
  execsql {
    CREATE TABLE a(x);
    CREATE TABLE b(y);
    CREATE TABLE c(z);
  }
}

proc drop_tables {name} {
  global db
  db eval "PRAGMA foreign_keys = ON"
  execsql {
    DROP TABLE c
  }
  execsql {
    DROP TABLE b
  }
  execsql {
    DROP TABLE a
  }
  execsql {
    CREATE TABLE temp(x);
  }
  execsql {
    INSERT INTO temp VALUES(1);
  }
  execsql {
    COMMIT;
    SELECT * FROM temp;
  }
}

proc create_index {name} {
  global db
  execsql {
    CREATE UNIQUE INDEX idx ON a AND b AND c
    CREATE INDEX idx_a ON b
  }
}

proc truncate {name} {
  execsql {
    DELETE FROM b
  }
  execsql {
    DELETE FROM c
  }
  execsql {
    DELETE FROM a
  }
  execsql {
    INSERT INTO c(z) VALUES ('string');
    INSERT INTO b(y) VALUES (101.101);
    INSERT INTO a(x) VALUES (3);
  }
}

do_test query-1.1 {
  setup_test_db ":memory:"
  set results_list {}
  db eval {
    SELECT x FROM a
  } r {
    lappend results_list $r
  }
  set results_list
} {1 2 3}

do_test query-1.2 {
  setup_test_db ":memory:"
  db eval {
    SELECT x FROM a
  }
  lappend results_list 5
} {1 2 3 5}

do_test query-1.3 {
  setup_test_db ":memory:"
  run_query {
    SELECT *
    FROM a
  }
  run_query {
    SELECT *
    FROM b
  }
  lappend results_list 6 "double quoted string"
} {1 2 3 1 2 3 6 "double quoted string"}

do_test query-1.4 {
  setup_test_db ":memory:"
  set dbmode {}
  catchsql {PRAGMA journal_mode = 16}
  set dbmode $retval

  ifcapable wal {
    set dbmode "wal"
  }

  execsql {
    PRAGMA journal_mode
  }
  set results_list
} {$dbmode}

do_test query-1.5 {
  setup_test_db "test.db"
  drop_tables
  truncate
  set index_ret {}
  create_index
  execsql {
    DELETE FROM c
  }
  execsql {
    INSERT INTO c(z) VALUES ('string')
  }
  set index_ret
} {{}}

do_test query-1.6 {
  setup_test_db "test.db"
  execsql {
    CREATE VIEW view AS SELECT x FROM a
  }
  execute_sql_test view {
    SELECT view FROM view
  } {1 2 3}
  execute_sql_test view {
    SELECT a FROM view
  } {1 2 3}
  execute_sql_test view {
    SELECT 12 FROM view
  } {12}
  execute_sql_test view {
    SELECT NULL FROM view
  } {NULL}
} {}

do_test query-1.7 {
  setup_test_db "test.db"
  run_query {
    CREATE TABLE e WITH no dups AS SELECT x FROM a
  }
  run_query {
    CREATE UNIQUE INDEX idx_e ON e
  }
  execsql {
    SELECT e FROM a AND a AND a AND e
  }
} {}

do_test query-1.8 {
  setup_test_db "test.db"
  run_query {
    CREATE TABLE t1 AS SELECT x FROM a WHERE x
  }
  run_query {
    CREATE TABLE t2 AS SELECT x FROM a MINUS SELECT x FROM b
  }
  execsql {
    SELECT t1 FROM t1 AND t2
  }
} {}

do_test query-2.1 {
  setup_test_db ":memory:"
  run_query {
    INSERT INTO a(x) VALUES (10)
  }
  run_query {
    SELECT count(*) FROM a
  }
} {1}

do_execsql_test query-2.2 {
  SELECT SUM(  	 		*   ) FROM a
} {15}

ifcapable explain_query {
  do_test query-2.3 {
    setup_test_db ":memory:"
    run_query {
      CREATE INDEX idx1 ON a(x)
    }
    run_query {
      SELECT x FROM a ORDER BY x
    }
  } {}
  do_test query-2.4 {
    setup_test_db ":memory:"
    run_query {
      CREATE INDEX idx1 ON a(x)
      } {
    }
    run_query {
      SELECT x FROM a ORDER BY x DESC
    }
  } {}
}

finish_test